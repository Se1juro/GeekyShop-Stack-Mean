{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/checkout/checkout-item/checkout-item.component.ts","webpack:///src/app/components/checkout/checkout-item/checkout-item.component.html","webpack:///src/app/components/checkout/checkout.component.html","webpack:///src/app/components/checkout/checkout.component.ts","webpack:///src/app/components/employees/employees.component.ts","webpack:///src/app/components/employees/employees.component.html","webpack:///src/app/components/footer/footer.component.ts","webpack:///src/app/components/footer/footer.component.html","webpack:///src/app/components/games/games.component.ts","webpack:///src/app/components/games/games.component.html","webpack:///src/app/components/gestionProductos/gestion-products.component.ts","webpack:///src/app/components/gestionProductos/gestion-products.component.html","webpack:///src/app/components/home/cart/cart-item/cart-item.component.ts","webpack:///src/app/components/home/cart/cart-item/cart-item.component.html","webpack:///src/app/components/home/cart/cart.component.ts","webpack:///src/app/components/home/cart/cart.component.html","webpack:///src/app/components/home/filter/filter.component.ts","webpack:///src/app/components/home/filter/filter.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/home/product-list/product-item/product-item.component.ts","webpack:///src/app/components/home/product-list/product-item/product-item.component.html","webpack:///src/app/components/home/product-list/product-list.component.ts","webpack:///src/app/components/home/product-list/product-list.component.html","webpack:///src/app/components/preview-products/preview-products.component.ts","webpack:///src/app/components/preview-products/preview-products.component.html","webpack:///src/app/components/private-games/private-games.component.ts","webpack:///src/app/components/private-games/private-games.component.html","webpack:///src/app/components/profile/profile.component.ts","webpack:///src/app/components/profile/profile.component.html","webpack:///src/app/components/public/page404/page404.component.ts","webpack:///src/app/components/public/page404/page404.component.html","webpack:///src/app/components/signin/signin.component.ts","webpack:///src/app/components/signin/signin.component.html","webpack:///src/app/components/signup/signup.component.ts","webpack:///src/app/components/signup/signup.component.html","webpack:///src/app/components/users/users.component.ts","webpack:///src/app/components/users/users.component.html","webpack:///src/app/guards/auth-back-to-login.guard.ts","webpack:///src/app/guards/auth-role-admin.guard.ts","webpack:///src/app/guards/auth-role-employee.guard.ts","webpack:///src/app/guards/auth.guard.ts","webpack:///src/app/models/cart-item.ts","webpack:///src/app/models/employee.ts","webpack:///src/app/models/products.ts","webpack:///src/app/models/users.ts","webpack:///src/app/pipes/filter.pipe.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/employee.service.ts","webpack:///src/app/services/filter.service.ts","webpack:///src/app/services/messenger.service.ts","webpack:///src/app/services/products.service.ts","webpack:///src/app/services/roles.service.ts","webpack:///src/app/services/shopcart.service.ts","webpack:///src/app/services/token-interceptor.service.ts","webpack:///src/app/services/users.service.ts","webpack:///src/app/services/wishlist.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","canActivate","AppRoutingModule","forRoot","imports","authService","AppComponent","filterService","router","filtroValor","filter","filterEmitter","updateUserStatus","subscribe","res","traerDatos","valueChanges","pipe","value","emit","tomarDatos","navigateByUrl","skipLocationChange","navigate","loggedIn","user","decodeToken","email","nombre_usuario","rol","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","CheckoutItemComponent","CheckoutComponent","shopCart","cartTotal","loadProductsInCart","paypal","Buttons","createOrder","data","actions","order","create","purchase_units","description","amount","currency_code","onApprove","capture","fire","title","text","imageUrl","imageWidth","imageHeight","imageAlt","confirmButtonColor","onError","err","render","paypalElement","nativeElement","getCartItems","getUserId","products","calculeCartTotal","console","log","forEach","product","price","EmployeesComponent","employeeService","fb","employee","name","position","officine","salary","salaryPattern","createEmployeeForm","group","required","minLength","maxLength","pattern","getEmployees","onEditEmployee","form","reset","selectedEmployee","event","inputChar","String","fromCharCode","charCode","test","preventDefault","postEmployee","resetForm","icon","putEmployee","employees","_id","controls","setValue","showCancelButton","cancelButtonColor","confirmButtonText","result","deleteEmployee","addEmployee","onSalaryIntroduced","FooterComponent","GamesComponent","GestionProductsComponent","productService","pricePattern","createProductForm","inputImage","target","files","file","reader","FileReader","onload","photoSelected","readAsDataURL","createProduct","onPriceIntroduced","onPhotoSelected","CartItemComponent","deleteProductFromCar","deleteProductOfCart","CartComponent","message","cartService","cartItems","handleSubscription","loadCartItems","loadCartUser","getMessage","length","getCartUser","cartUser","cleanCart","FilterComponent","valorFilter","traerDatoFilter","datoFilter","entregarDato","HomeComponent","cargarDatoEnFiltro","datos","datoFiltrar","recibirDatoFiltro","handleSearch","ProductItemComponent","wishList","canAddtoCart","addProductToCar","sendMessage","error","code_error","addToWishList","addedToWishList","removeFromWishList","selectedCard","handleAddToCart","ProductListComponent","wishListService","loadProducts","loadWishList","getProducts","getToken","getWishList","PreviewProductsComponent","activatedRoute","updateProductForm","params","getProduct","deleteProduct","updateProduct","PrivateGamesComponent","ProfileComponent","userService","emailPattern","profileForm","passwordActual","passwordNueva","idUser","getProfile","updateProfile","guardarCambios","Page404Component","SigninComponent","password","loginForm","signIn","setToken","token","next","SignupComponent","registerForm","signUp","UsersComponent","rolService","createUserForm","getUserModificador","getUsers","getRoles","deshabilitarInputs","onEditUser","disable","enable","userModificador","users","roles","selectedUser","habilitarInputs","deleteUser","addUser","AuthBackToLoginGuard","route","state","queryParams","returnUrl","url","providedIn","AuthRoleAdminGuard","isAdmin","AuthRoleEmployeeGuard","isEmployee","AuthGuard","CartItem","productId","userId","Employee","Product","imagePath","imageName","User","FilterPipe","lista","texto","toUpperCase","includes","AuthService","http","URL","post","localStorage","getItem","removeItem","setItem","decode","EmployeeService","URL_API","get","put","FilterService","dato","MessengerService","subject","asObservable","ProductsService","selectedProduct","photo","formData","FormData","append","RolesService","ShopcartService","carts","item","push","producto","TokenInterceptorService","tokenReq","clone","setHeaders","Authorization","handle","UsersService","WishlistService","productIds","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n//COMPONENTES//\nimport { EmployeesComponent } from './components/employees/employees.component';\nimport { GamesComponent } from './components/games/games.component';\nimport { SigninComponent } from './components/signin/signin.component';\nimport { SignupComponent } from './components/signup/signup.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { PrivateGamesComponent } from './components/private-games/private-games.component';\nimport { UsersComponent } from './components/users/users.component';\nimport { AuthRoleAdminGuard } from './guards/auth-role-admin.guard';\nimport { AuthGuard } from './guards/auth.guard';\nimport { AuthBackToLoginGuard } from './guards/auth-back-to-login.guard';\nimport { GestionProductsComponent } from './components/gestionProductos/gestion-products.component';\nimport { PreviewProductsComponent } from './components/preview-products/preview-products.component';\nimport { AuthRoleEmployeeGuard } from './guards/auth-role-employee.guard';\nimport { Page404Component } from './components/public/page404/page404.component';\nimport { CheckoutComponent } from './components/checkout/checkout.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: '/home',\n    pathMatch: 'full',\n  },\n  {\n    path: 'employees',\n    component: EmployeesComponent,\n    canActivate: [AuthGuard, AuthRoleAdminGuard],\n  },\n  {\n    path: 'gestionProducts',\n    component: GestionProductsComponent,\n    canActivate: [AuthGuard, AuthRoleEmployeeGuard],\n  },\n  {\n    path: 'games',\n    component: GamesComponent,\n  },\n  {\n    path: 'preview-products/:id',\n    component: PreviewProductsComponent,\n  },\n  {\n    path: 'signin',\n    component: SigninComponent,\n    canActivate: [AuthBackToLoginGuard],\n  },\n  {\n    path: 'signup',\n    component: SignupComponent,\n    canActivate: [AuthBackToLoginGuard],\n  },\n  {\n    path: 'profile/:id',\n    component: ProfileComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'home',\n    component: HomeComponent,\n  },\n  {\n    path: 'private-games',\n    component: PrivateGamesComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'usuarios',\n    component: UsersComponent,\n    canActivate: [AuthGuard, AuthRoleEmployeeGuard],\n  },\n  {\n    path: 'checkout/:id',\n    component: CheckoutComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: '**', //Si no encuentra una pagina, muestra la 404\n    component: Page404Component,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, Output, EventEmitter } from '@angular/core';\nimport { AuthService } from './services/auth.service';\nimport { Subject } from 'rxjs';\nimport { FormControl } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\nimport { FilterService } from './services/filter.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  public static updateUserStatus: Subject<boolean> = new Subject();\n  user: any;\n  constructor(\n    public authService: AuthService,\n    public filterService: FilterService,\n    private router: Router\n  ) {\n    AppComponent.updateUserStatus.subscribe((res) => {\n      this.traerDatos();\n    });\n  }\n  filtroValor = '';\n  ngOnInit() {\n    this.traerDatos();\n    this.filter.valueChanges.pipe(debounceTime(300)).subscribe((value) => {\n      this.filtroValor = value;\n      this.filterEmitter.emit(value);\n      this.filterService.tomarDatos(this.filtroValor);\n      this.router\n        .navigateByUrl('/RefreshComponent', {\n          skipLocationChange: true,\n        })\n        .then(() => {\n          this.router.navigate(['/home']);\n        });\n    });\n  }\n\n  selectCart(id: String) {\n    this.router.navigate(['/checkout', id]);\n  }\n\n  goToProfile(id: String) {\n    this.router.navigate(['/profile', id]);\n  }\n\n  traerDatos() {\n    //CREO UNA FUNCION QUE ME VA GUARDAR LOS DATOS DEL USUARIO DECODIFICANDO EL TOKEN\n    if (this.authService.loggedIn()) {\n      //SOLO DECODIFICA EL TOKEN SI ESTA LOGEADO\n      this.user = {\n        id: this.authService.decodeToken().id,\n        email: this.authService.decodeToken().email,\n        nombre_usuario: this.authService.decodeToken().nombre_usuario,\n        rol: this.authService.decodeToken().rol,\n      };\n    }\n  }\n  filter = new FormControl('');\n\n  @Output('filter') filterEmitter = new EventEmitter<String>();\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" routerLink=\"/home\" routerLinkActive=\"active\">\n      <img\n        src=\"../assets/imgs/favicon.png\"\n        width=\"30\"\n        height=\"30\"\n        class=\"d-inline-block align-top\"\n        alt=\"\"\n      />\n      GeekyShop\n    </a>\n    <button\n      class=\"navbar-toggler\"\n      type=\"button\"\n      data-toggle=\"collapse\"\n      data-target=\"#navbarNav\"\n      aria-controls=\"navbarNav\"\n      aria-expanded=\"false\"\n      aria-label=\"Toggle navigation\"\n    >\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n      <ul class=\"navbar-nav\">\n        <li class=\"nav-item\">\n          <form class=\"form-inline my-2 my-lg-0\">\n            <input\n              class=\"form-control mr-sm-2 nav-link\"\n              type=\"search\"\n              placeholder=\"Buscar\"\n              aria-label=\"Buscar\"\n              name=\"filterPost\"\n              [formControl]=\"filter\"\n            />\n          </form>\n        </li>\n        <li\n          class=\"nav-item dropdown\"\n          *ngIf=\"authService.loggedIn() && authService.isEmployee()\"\n        >\n          <a\n            class=\"nav-link dropdown-toggle nav-link\"\n            data-toggle=\"dropdown\"\n            role=\"button\"\n            aria-haspopup=\"true\"\n            aria-expanded=\"false\"\n            >Herramientas</a\n          >\n          <div class=\"dropdown-menu\">\n            <ng-container *ngIf=\"authService.loggedIn()\">\n              <li class=\"nav-item\">\n                <div *ngIf=\"authService.isEmployee()\">\n                  <a\n                    class=\"nav-link dropdown-item\"\n                    routerLink=\"/private-games\"\n                    routerLinkActive=\"active\"\n                    >Juegos no publicados</a\n                  >\n                </div>\n              </li>\n              <li class=\"nav-item\">\n                <div *ngIf=\"authService.isEmployee()\">\n                  <a\n                    class=\"nav-link dropdown-item\"\n                    routerLink=\"/gestionProducts\"\n                    routerLinkActive=\"active\"\n                    >Gestion de productos</a\n                  >\n                </div>\n              </li>\n              <li class=\"nav-item\">\n                <div *ngIf=\"authService.isAdmin()\">\n                  <a\n                    class=\"nav-link dropdown-item\"\n                    routerLink=\"/employees\"\n                    routerLinkActive=\"active\"\n                    >Empleados</a\n                  >\n                </div>\n              </li>\n              <li class=\"nav-item\">\n                <div *ngIf=\"authService.isEmployee()\">\n                  <a\n                    class=\"nav-link dropdown-item\"\n                    routerLink=\"/usuarios\"\n                    routerLinkActive=\"active\"\n                    >Usuarios</a\n                  >\n                </div>\n              </li>\n            </ng-container>\n          </div>\n        </li>\n      </ul>\n      <ul class=\"navbar-nav ml-auto\">\n        <li class=\"nav-item\" *ngIf=\"authService.loggedIn()\">\n          <a\n            class=\"navbar-brand\"\n            (click)=\"selectCart(user.id)\"\n            routerLinkActive=\"active\"\n          >\n            <img\n              src=\"../assets/imgs/shopcart.svg\"\n              width=\"30\"\n              height=\"30\"\n              alt=\"\"\n              loading=\"lazy\"\n            />\n          </a>\n        </li>\n        <ng-container *ngIf=\"!authService.loggedIn(); else loggedIn\">\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/signin\" routerLinkActive=\"active\"\n              >Iniciar Sesion</a\n            >\n          </li>\n        </ng-container>\n        <ng-template #loggedIn>\n          <li class=\"nav-item\">\n            <a\n              class=\"nav-link\"\n              (click)=\"goToProfile(user.id)\"\n              routerLinkActive=\"active\"\n              >{{ user.nombre_usuario }}</a\n            >\n          </li>\n          <li class=\"nav-item\" *ngIf=\"authService.isEmployee()\">\n            <a class=\"nav-link\">Rol: {{ user.rol }}</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" (click)=\"authService.logOut()\">Cerrar Sesion</a>\n          </li>\n        </ng-template>\n      </ul>\n    </div>\n  </div>\n</nav>\n<div class=\"container p-5\">\n  <router-outlet></router-outlet>\n</div>\n<app-footer></app-footer>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { EmployeesComponent } from './components/employees/employees.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { SignupComponent } from './components/signup/signup.component';\nimport { SigninComponent } from './components/signin/signin.component';\nimport { GamesComponent } from './components/games/games.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { PrivateGamesComponent } from './components/private-games/private-games.component';\nimport { UsersComponent } from './components/users/users.component';\nimport { AuthGuard } from './guards/auth.guard';\nimport { AuthBackToLoginGuard } from './guards/auth-back-to-login.guard';\nimport { AuthRoleAdminGuard } from './guards/auth-role-admin.guard';\nimport { TokenInterceptorService } from './services/token-interceptor.service';\nimport { GestionProductsComponent } from './components/gestionProductos/gestion-products.component';\nimport { PreviewProductsComponent } from './components/preview-products/preview-products.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { CartComponent } from './components/home/cart/cart.component';\nimport { FilterComponent } from './components/home/filter/filter.component';\nimport { CartItemComponent } from './components/home/cart/cart-item/cart-item.component';\nimport { ProductListComponent } from './components/home/product-list/product-list.component';\nimport { ProductItemComponent } from './components/home/product-list/product-item/product-item.component';\nimport { Page404Component } from './components/public/page404/page404.component';\nimport { CheckoutComponent } from './components/checkout/checkout.component';\nimport { CheckoutItemComponent } from './components/checkout/checkout-item/checkout-item.component';\nimport { FilterPipe } from './pipes/filter.pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EmployeesComponent,\n    SignupComponent,\n    SigninComponent,\n    GamesComponent,\n    ProfileComponent,\n    HomeComponent,\n    PrivateGamesComponent,\n    UsersComponent,\n    GestionProductsComponent,\n    PreviewProductsComponent,\n    FooterComponent,\n    CartComponent,\n    FilterComponent,\n    CartItemComponent,\n    ProductListComponent,\n    ProductItemComponent,\n    Page404Component,\n    CheckoutComponent,\n    CheckoutItemComponent,\n    FilterPipe,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n  ],\n  providers: [\n    AuthGuard,\n    AuthRoleAdminGuard,\n    AuthBackToLoginGuard,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptorService,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Product } from 'src/app/models/products';\n\n@Component({\n  selector: 'app-checkout-item',\n  templateUrl: './checkout-item.component.html',\n  styleUrls: ['./checkout-item.component.css'],\n})\nexport class CheckoutItemComponent implements OnInit {\n  @Input() product: Product;\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"row\" *ngIf=\"!product; else mainContent\">\n  <h1>Loading...</h1>\n</div>\n\n<ng-template #mainContent>\n  <div class=\"row\">\n    <div class=\"container\">\n      <div class=\"card\">\n        <div class=\"card-photo\">\n          <img\n            [src]=\"'http://localhost:3000/public/' + product.imageName\"\n            class=\"img-card-top\"\n            height=\"100px\"\n            width=\"70px\"\n          />\n        </div>\n        <div class=\"card-body\">\n          <p class=\"card-text\">\n            <strong>{{ product.name }}</strong>\n            <br />\n            {{ product.description | slice: 0:50 }}...\n            <br />\n            Precio: <strong> {{ product.price | currency: \"USD\" }} </strong>\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n</ng-template>\n","<div class=\"row\">\n  <div class=\"container col-6\">\n    <div class=\"card\">\n      <div class=\"card-header\">Check out</div>\n    </div>\n    <div class=\"card-body\" *ngFor=\"let product of products\">\n      <app-checkout-item [product]=\"product\"></app-checkout-item>\n    </div>\n  </div>\n  <div class=\"container col-6\">\n    <div class=\"card-text total\">\n      <h1>\n        Total\n      </h1>\n      <div class=\"totalNum\">\n        {{ cartTotal | currency: \"USD\" }}\n      </div>\n    </div>\n    <div #paypal></div>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { ShopcartService } from 'src/app/services/shopcart.service';\nimport { ActivatedRoute } from '@angular/router';\nimport Swal from 'sweetalert2';\ndeclare var paypal;\n@Component({\n  selector: 'app-checkout',\n  templateUrl: './checkout.component.html',\n  styleUrls: ['./checkout.component.css'],\n})\nexport class CheckoutComponent implements OnInit {\n  @ViewChild('paypal', { static: true }) paypalElement: ElementRef;\n  idCart: String;\n  cartTotal = 0;\n  products: any;\n  constructor(public shopCart: ShopcartService) {}\n\n  ngOnInit(): void {\n    this.loadProductsInCart();\n    paypal\n      .Buttons({\n        createOrder: (data, actions) => {\n          return actions.order.create({\n            purchase_units: [\n              {\n                description: `Pago`,\n                amount: {\n                  currency_code: 'USD',\n                  value: this.cartTotal,\n                },\n              },\n            ],\n          });\n        },\n        onApprove: async (data, actions) => {\n          const order = await actions.order.capture();\n          Swal.fire({\n            title: 'Hola, agradecemos por tu compra',\n            text: 'Se te hara entrega de tu producto a tu correo registrado',\n            imageUrl: '../../../../../assets/imgs/buy.svg',\n            imageWidth: 400,\n            imageHeight: 200,\n            imageAlt: 'Custom image',\n            confirmButtonColor: '#6c5ce7',\n          });\n        },\n        onError: (err) => {\n          Swal.fire({\n            title: 'Hola, lo sentimos',\n            text:\n              'Hubo un error con tu metodo de pago, comunicate con tu banco o intenta de nuevo',\n            imageUrl: '../../../../../assets/imgs/stress.svg',\n            imageWidth: 400,\n            imageHeight: 200,\n            imageAlt: 'Custom image',\n            confirmButtonColor: '#6c5ce7',\n          });\n        },\n      })\n      .render(this.paypalElement.nativeElement);\n  }\n\n  loadProductsInCart() {\n    this.shopCart.getCartItems(this.shopCart.getUserId()).subscribe(\n      (res) => {\n        this.products = res;\n        this.calculeCartTotal();\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n  }\n\n  calculeCartTotal() {\n    this.cartTotal = 0;\n    this.products.forEach((product) => {\n      this.cartTotal += product.price;\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\nimport { EmployeeService } from '../../services/employee.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Employee } from 'src/app/models/employee';\n\nimport Swal from 'sweetalert2';\nimport { on } from 'process';\n\n@Component({\n  selector: 'app-employees',\n  templateUrl: './employees.component.html',\n  styleUrls: ['./employees.component.css'],\n  providers: [EmployeeService],\n})\nexport class EmployeesComponent implements OnInit {\n  id: String;\n  employee = { name: '', position: '', officine: '', salary: 0 };\n  onEditEmployee: boolean;\n  createEmployeeForm: FormGroup;\n  salaryPattern = /[0-9]/;\n  constructor(public employeeService: EmployeeService, public fb: FormBuilder) {\n    this.createEmployeeForm = this.fb.group({\n      name: ['', [Validators.required]],\n      position: ['', [Validators.required]],\n      officine: ['', [Validators.required]],\n      salary: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(2),\n          Validators.maxLength(7),\n          Validators.pattern(this.salaryPattern),\n        ],\n      ],\n    });\n  }\n\n  ngOnInit() {\n    this.getEmployees();\n    this.onEditEmployee = false;\n  }\n\n  resetForm(form?: FormGroup) {\n    if (form) {\n      form.reset();\n      this.employeeService.selectedEmployee = new Employee();\n    }\n  }\n\n  onSalaryIntroduced(event: KeyboardEvent) {\n    const inputChar = String.fromCharCode(event.charCode);\n    if (!this.salaryPattern.test(inputChar)) {\n      // invalid character, prevent input\n      event.preventDefault();\n    }\n  }\n\n  addEmployee() {\n    if (this.onEditEmployee == false) {\n      this.employeeService\n        .postEmployee(this.createEmployeeForm.value)\n        .subscribe(\n          (res) => {\n            this.resetForm(this.createEmployeeForm);\n            this.getEmployees();\n            Swal.fire({\n              title: 'Registro exitoso',\n              text: 'Empleado registrado exitosamente',\n              icon: 'success',\n              confirmButtonColor: '#6c5ce7',\n            });\n          },\n          (err) => {\n            console.log(err);\n            Swal.fire({\n              icon: 'error',\n              title: 'Oops...',\n              text: 'No se pudo guardar el registro',\n            });\n          }\n        );\n    } else if (this.onEditEmployee == true) {\n      this.employeeService\n        .putEmployee(this.id, this.createEmployeeForm.value)\n        .subscribe(\n          (res) => {\n            this.resetForm(this.createEmployeeForm);\n            this.getEmployees();\n            Swal.fire({\n              title: 'Actualizacion exitosa!',\n              text: 'Empleado actualizado correctamente',\n              icon: 'success',\n              confirmButtonColor: '#6c5ce7',\n            });\n          },\n          (err) => {\n            console.log(err);\n          }\n        );\n    }\n  }\n\n  getEmployees() {\n    this.employeeService.getEmployees().subscribe((res) => {\n      this.employeeService.employees = res as Employee[];\n    });\n  }\n\n  editEmployee(employee) {\n    this.id = employee._id;\n    this.employeeService.selectedEmployee = employee;\n    this.createEmployeeForm.controls['name'].setValue(employee.name);\n    this.createEmployeeForm.controls['officine'].setValue(employee.officine);\n    this.createEmployeeForm.controls['position'].setValue(employee.position);\n    this.createEmployeeForm.controls['salary'].setValue(employee.salary);\n    this.onEditEmployee = true;\n  }\n  deleteEmployee(_id: string) {\n    Swal.fire({\n      title: '¿Estas seguro de querer eliminar este registro?',\n      text: 'No podras revertir esto!',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#6c5ce7',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Si, Borralo',\n    }).then((result) => {\n      if (result.value) {\n        Swal.fire({\n          title: 'Eliminado',\n          text: 'Tu registro se ha eliminado con exito.',\n          icon: 'success',\n          confirmButtonColor: '#6c5ce7',\n        });\n        this.employeeService.deleteEmployee(_id).subscribe((res) => {\n          this.getEmployees();\n        });\n      } else {\n        Swal.fire({\n          icon: 'error',\n          title: 'Algo salio mal',\n          text: 'No pudimos eliminar tu registro',\n          confirmButtonColor: '#6c5ce7',\n        });\n      }\n    });\n  }\n}\n","<div class=\"row\">\n  <div class=\"container col-5\">\n    <div class=\"card\">\n      <div class=\"card-header\">\n        Gestion de empleados\n      </div>\n      <div class=\"card-body\">\n        <form [formGroup]=\"createEmployeeForm\" (ngSubmit)=\"addEmployee()\">\n          <div class=\"form-group\">\n            <div class=\"form-group\">\n              <label for=\"nombre\">Nombre del empleado</label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                name=\"name\"\n                formControlName=\"name\"\n                [value]=\"employeeService.selectedEmployee.name\"\n                [ngClass]=\"{\n                  'is-invalid':\n                    createEmployeeForm.get('name').errors &&\n                    createEmployeeForm.get('name').dirty\n                }\"\n                placeholder=\"Enter your name\"\n                required\n              />\n            </div>\n            <div\n              *ngIf=\"\n                createEmployeeForm.get('name').errors &&\n                createEmployeeForm.get('name').dirty\n              \"\n            >\n              <p\n                *ngIf=\"createEmployeeForm.get('name').hasError('required')\"\n                class=\"invalid-p\"\n              >\n                Campo requerido\n              </p>\n            </div>\n            <div class=\"form-group\">\n              <label for=\"puesto\">Puesto del empleado</label>\n              <input\n                type=\"text\"\n                name=\"position\"\n                class=\"form-control\"\n                formControlName=\"position\"\n                [ngClass]=\"{\n                  'is-invalid':\n                    createEmployeeForm.get('position').errors &&\n                    createEmployeeForm.get('position').dirty\n                }\"\n                [value]=\"employeeService.selectedEmployee.position\"\n                placeholder=\"Enter your position\"\n                required\n              />\n            </div>\n            <div\n              *ngIf=\"\n                createEmployeeForm.get('position').errors &&\n                createEmployeeForm.get('position').dirty\n              \"\n            >\n              <p\n                *ngIf=\"createEmployeeForm.get('position').hasError('required')\"\n                class=\"invalid-p\"\n              >\n                Campo requerido\n              </p>\n            </div>\n            <div class=\"form-group\">\n              <label for=\"oficina\">Oficina del empleado</label>\n              <input\n                type=\"text\"\n                name=\"officine\"\n                class=\"form-control\"\n                formControlName=\"officine\"\n                [value]=\"employeeService.selectedEmployee.officine\"\n                [ngClass]=\"{\n                  'is-invalid':\n                    createEmployeeForm.get('officine').errors &&\n                    createEmployeeForm.get('officine').dirty\n                }\"\n                placeholder=\"Enter your officine\"\n                required\n              />\n            </div>\n            <div\n              *ngIf=\"\n                createEmployeeForm.get('officine').errors &&\n                createEmployeeForm.get('officine').dirty\n              \"\n            >\n              <p\n                *ngIf=\"createEmployeeForm.get('officine').hasError('required')\"\n                class=\"invalid-p\"\n              >\n                Campo requerido\n              </p>\n            </div>\n            <div class=\"form-group\">\n              <label for=\"puesto\">Salario del empleado</label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                placeholder=\"Enter your salary\"\n                [value]=\"employeeService.selectedEmployee.salary\"\n                minlength=\"2\"\n                maxlength=\"7\"\n                formControlName=\"salary\"\n                [pattern]=\"salaryPattern\"\n                (keypress)=\"onSalaryIntroduced($event)\"\n                [ngClass]=\"{\n                  'is-invalid':\n                    createEmployeeForm.get('salary').errors &&\n                    createEmployeeForm.get('salary').dirty\n                }\"\n                required\n              />\n            </div>\n            <div\n              *ngIf=\"\n                createEmployeeForm.get('salary').errors &&\n                createEmployeeForm.get('salary').dirty\n              \"\n            >\n              <p\n                *ngIf=\"createEmployeeForm.get('salary').hasError('pattern')\"\n                class=\"invalid-p\"\n              >\n                Ingrese un precio correcto: 4000, 44, 44.44\n              </p>\n              <p\n                *ngIf=\"createEmployeeForm.get('salary').hasError('required')\"\n                class=\"invalid-p\"\n              >\n                Campo requerido\n              </p>\n              <p\n                *ngIf=\"createEmployeeForm.get('salary').hasError('minlength')\"\n                class=\"invalid-p\"\n              >\n                El minimo de caracteres es de 2\n              </p>\n              <p\n                *ngIf=\"createEmployeeForm.get('salary').errors?.maxlength\"\n                class=\"invalid-p\"\n              >\n                El maximo de caracteres es de 7\n              </p>\n            </div>\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary\"\n              style=\"margin-left: 2px;\"\n              [disabled]=\"createEmployeeForm.invalid\"\n            >\n              Guardar\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-primary\"\n              (click)=\"resetForm(createEmployeeForm)\"\n            >\n              Limpiar\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n  <div class=\"container table-employee col-6\">\n    <table class=\"table table-bordered\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Position</th>\n          <th>Officine</th>\n          <th>Operations</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let employee of employeeService.employees\">\n          <td>{{ employee.name }}</td>\n          <td>{{ employee.position }}</td>\n          <td>{{ employee.officine }}</td>\n          <td class=\"icons\">\n            <a (click)=\"editEmployee(employee)\">\n              <i class=\"material-icons\">edit</i>\n            </a>\n            <a (click)=\"deleteEmployee(employee._id)\">\n              <i class=\"material-icons\" style=\"margin-left: 40px;\">delete</i>\n            </a>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer class=\"page-footer font-small blue pt-4\">\r\n  <div class=\"container-fluid text-center text-md-left\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6 mt-md-0 mt-3\">\r\n        <h5 class=\"text-uppercase\">Geeky Shop</h5>\r\n        <img\r\n          src=\"../../../assets/imgs/online-shopping.svg\"\r\n          width=\"120px\"\r\n          height=\"120px\"\r\n        />\r\n      </div>\r\n      <hr class=\"clearfix w-100 d-md-none pb-3\" />\r\n      <div class=\"col-md-3 mb-md-0 mb-3\">\r\n        <h5 class=\"text-uppercase\">Redes Sociales</h5>\r\n        <ul class=\"list-unstyled\">\r\n          <li>\r\n            <a href=\"#!\">Facebook</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#!\">LinkdIn</a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"footer-copyright text-center py-3\">\r\n    © 2020 Copyright:\r\n    <a href=\"https://mdbootstrap.com/\"> BMSoftware</a>\r\n  </div>\r\n</footer>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-games',\n  templateUrl: './games.component.html',\n  styleUrls: ['./games.component.css']\n})\nexport class GamesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  games works!\n</p>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ProductsService } from 'src/app/services/products.service';\nimport Swal from 'sweetalert2';\ninterface HtmlInputEvent extends Event {\n  target: HTMLInputElement & EventTarget;\n}\n\n@Component({\n  selector: 'app-gestion-products',\n  templateUrl: './gestion-products.component.html',\n  styleUrls: ['./gestion-products.component.css'],\n  providers: [ProductsService],\n})\nexport class GestionProductsComponent implements OnInit {\n  product = { name: '', description: '', price: 0 };\n  file: File;\n  createProductForm: FormGroup;\n  photoSelected: string | ArrayBuffer;\n  pricePattern = /[0-9]/;\n\n  constructor(\n    private router: Router,\n    public productService: ProductsService,\n    public fb: FormBuilder\n  ) {\n    this.createProductForm = this.fb.group({\n      name: ['', [Validators.required]],\n      description: ['', [Validators.required, Validators.maxLength(140)]],\n      price: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(2),\n          Validators.maxLength(7),\n          Validators.pattern(this.pricePattern),\n        ],\n      ],\n      inputImage: ['', [Validators.required]],\n    });\n  }\n\n  ngOnInit(): void {}\n  resetForm(form?: FormGroup) {\n    if (form) {\n      form.reset();\n    }\n  }\n  //VALIDA SI LO QUE ESTOY INGRESANDO SON NUMEROS O LETRAS\n  onPriceIntroduced(event: KeyboardEvent) {\n    const inputChar = String.fromCharCode(event.charCode);\n    if (!this.pricePattern.test(inputChar)) {\n      // invalid character, prevent input\n      event.preventDefault();\n    }\n  }\n  onPhotoSelected(event: HtmlInputEvent): void {\n    if (event.target.files && event.target.files[0]) {\n      this.file = <File>event.target.files[0];\n      //Image Preview\n      const reader = new FileReader();\n      reader.onload = (e) => (this.photoSelected = reader.result);\n      reader.readAsDataURL(this.file);\n    }\n  }\n\n  createProduct() {\n    this.productService\n      .createProduct(this.createProductForm.value, this.file)\n      .subscribe(\n        (res) => {\n          this.resetForm(this.createProductForm);\n          Swal.fire({\n            title: 'Registro exitoso!',\n            text: 'Juego agregado correctamente',\n            icon: 'success',\n            confirmButtonColor: '#6c5ce7',\n          });\n          this.router.navigate(['/home']);\n        },\n        (err) => {\n          Swal.fire({\n            icon: 'error',\n            title: 'Algo salio mal',\n            text: 'No pudimos agregar el juego',\n            confirmButtonColor: '#6c5ce7',\n          });\n        }\n      );\n  }\n}\n","<div class=\"row\">\n  <div class=\"container col-5\">\n    <div class=\"card\">\n      <div class=\"card-header\">Gestion de productos</div>\n      <div class=\"card-body\">\n        <form\n          class=\"container\"\n          [formGroup]=\"createProductForm\"\n          (ngSubmit)=\"createProduct()\"\n        >\n          <div class=\"form-group\">\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              formControlName=\"name\"\n              placeholder=\"Juego\"\n              [ngClass]=\"{\n                'is-invalid':\n                  createProductForm.get('name').errors &&\n                  createProductForm.get('name').dirty\n              }\"\n              required\n              autofocus\n              name=\"name\"\n            />\n          </div>\n          <div\n            *ngIf=\"\n              createProductForm.get('name').errors &&\n              createProductForm.get('name').dirty\n            \"\n          >\n            <p *ngIf=\"createProductForm.get('name').hasError('required')\">\n              Campo requerido\n            </p>\n          </div>\n          <div class=\"form-group\">\n            <textarea\n              class=\"form-control\"\n              formControlName=\"description\"\n              placeholder=\"Ingrese la descripcion del juego\"\n              rows=\"3\"\n              required\n              [ngClass]=\"{\n                'is-invalid':\n                  createProductForm.get('description').errors &&\n                  createProductForm.get('description').dirty\n              }\"\n              maxlength=\"140\"\n              name=\"description\"\n            ></textarea>\n          </div>\n          <div\n            *ngIf=\"\n              createProductForm.get('description').errors &&\n              createProductForm.get('description').dirty\n            \"\n          >\n            <p\n              *ngIf=\"createProductForm.get('description').hasError('required')\"\n            >\n              Campo requerido\n            </p>\n            <p\n              *ngIf=\"createProductForm.get('description').hasError('maxlength')\"\n            >\n              El maximo de caracteres es de 140\n            </p>\n          </div>\n          <div class=\"form-group\">\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              placeholder=\"Precio del juego: 4000, 50000\"\n              [value]=\"product.price\"\n              minlength=\"2\"\n              maxlength=\"7\"\n              [ngClass]=\"{\n                'is-invalid':\n                  createProductForm.get('price').errors &&\n                  createProductForm.get('price').dirty\n              }\"\n              formControlName=\"price\"\n              [pattern]=\"pricePattern\"\n              (keypress)=\"onPriceIntroduced($event)\"\n            />\n          </div>\n          <div\n            *ngIf=\"\n              createProductForm.get('price').errors &&\n              createProductForm.get('price').dirty\n            \"\n          >\n            <p *ngIf=\"createProductForm.get('price').hasError('pattern')\">\n              Ingrese un precio correcto: 4000, 44, 44.44\n            </p>\n            <p *ngIf=\"createProductForm.get('price').hasError('required')\">\n              Campo requerido\n            </p>\n            <p *ngIf=\"createProductForm.get('price').hasError('minlength')\">\n              El minimo de caracteres es de 2\n            </p>\n            <p *ngIf=\"createProductForm.get('price').hasError('maxlength')\">\n              El maximo de caracteres es de 7\n            </p>\n          </div>\n          <div class=\"form-group inputFile\">\n            <input\n              type=\"file\"\n              class=\"form-control-file d-none position-static\"\n              id=\"uploadImage\"\n              name=\"image\"\n              formControlName=\"inputImage\"\n              (change)=\"onPhotoSelected($event)\"\n              enctype=\"multipart/form-data\"\n              #photoInput\n            />\n            <img\n              [src]=\"photoSelected || '../../../assets/imgs/uploadPic.svg'\"\n              class=\"img-fluid position-static\"\n              alt=\"No Image\"\n              (click)=\"photoInput.click()\"\n            />\n            <label for=\"uploadImage\" class=\"inputFile\">Subir Foto</label>\n          </div>\n          <div\n            *ngIf=\"\n              createProductForm.get('inputImage').errors &&\n              createProductForm.get('inputImage').dirty\n            \"\n          >\n            <p\n              *ngIf=\"createProductForm.get('inputImage').hasError('inputImage')\"\n            >\n              Campo requerido\n            </p>\n          </div>\n          <button\n            type=\"submit\"\n            class=\"btn btn-primary btn-block\"\n            [disabled]=\"createProductForm.invalid\"\n          >\n            Guardar\n          </button>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ShopcartService } from 'src/app/services/shopcart.service';\nimport { Router } from '@angular/router';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-cart-item',\n  templateUrl: './cart-item.component.html',\n  styleUrls: ['./cart-item.component.css'],\n})\nexport class CartItemComponent implements OnInit {\n  mySubscription: any;\n  @Input() cartItem: any;\n  constructor(public shopCart: ShopcartService, private router: Router) {}\n\n  ngOnInit(): void {}\n  deleteProductOfCart(product) {\n    this.shopCart\n      .deleteProductFromCar(product, this.shopCart.getUserId())\n      .subscribe(\n        (res) => {\n          Swal.fire({\n            title: 'El producto se ha eliminado de tu carrito',\n            imageUrl: '../../../../../assets/imgs/buy.svg',\n            imageWidth: 400,\n            imageHeight: 200,\n            imageAlt: 'Custom image',\n            confirmButtonColor: '#6c5ce7',\n          }).then((result) => {\n            if (result.value) {\n              this.router\n                .navigateByUrl('/RefreshComponent', {\n                  skipLocationChange: true,\n                })\n                .then(() => {\n                  this.router.navigate(['/home']);\n                });\n            }\n          });\n        },\n        (err) => {\n          Swal.fire({\n            title: 'Hola, lo sentimos',\n            text:\n              'Hubo un error tratando de eliminar el producto, vuelve a intentar',\n            imageUrl: '../../../../../assets/imgs/stress.svg',\n            imageWidth: 400,\n            imageHeight: 200,\n            imageAlt: 'Custom image',\n            confirmButtonColor: '#6c5ce7',\n          });\n        }\n      );\n  }\n}\n","<div class=\"cart-text\">\n  <span>{{ cartItem.name }}</span>\n  <div class=\"iconDelete\">\n    <a (click)=\"deleteProductOfCart(cartItem)\">\n      <i class=\"material-icons\">delete</i>\n    </a>\n  </div>\n</div>\n<strong> {{ cartItem.price | currency: \"USD\" }} </strong>\n","import { Component, OnInit } from '@angular/core';\nimport { MessengerService } from '../../../services/messenger.service';\nimport { Product } from 'src/app/models/products';\nimport Swal from 'sweetalert2';\nimport { ShopcartService } from 'src/app/services/shopcart.service';\nimport { CartItem } from 'src/app/models/cart-item';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css'],\n})\nexport class CartComponent implements OnInit {\n  cartItems = [];\n  cartUser: any;\n  cartTotal = 0;\n  constructor(\n    private message: MessengerService,\n    private cartService: ShopcartService,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.handleSubscription();\n    this.loadCartItems();\n    this.loadCartUser();\n  }\n\n  handleSubscription() {\n    this.message.getMessage().subscribe((product: Product) => {\n      this.loadCartItems();\n    });\n  }\n\n  loadCartUser() {\n    if (this.cartItems.length > 0) {\n      this.cartService\n        .getCartUser(this.cartService.getUserId())\n        .subscribe((res) => {\n          this.cartUser = res[0]._id;\n          this.router.navigate(['/checkout', this.cartUser]);\n        });\n    }\n  }\n  cleanCart() {\n    this.cartService.cleanCart(this.cartService.getUserId()).subscribe(\n      (res) => {\n        Swal.fire({\n          title: 'Tu carrito se ha vaciado',\n          imageUrl: '../../../../../assets/imgs/buy.svg',\n          imageWidth: 400,\n          imageHeight: 200,\n          imageAlt: 'Custom image',\n          confirmButtonColor: '#6c5ce7',\n        }).then((result) => {\n          if (result.value) {\n            this.router\n              .navigateByUrl('/RefreshComponent', {\n                skipLocationChange: true,\n              })\n              .then(() => {\n                this.router.navigate(['/home']);\n              });\n          }\n        });\n      },\n      (err) => {\n        Swal.fire({\n          title: 'Hola, lo sentimos',\n          text:\n            'Hubo un error tratando de limpiar tu carrito, vuelve a intentar',\n          imageUrl: '../../../../../assets/imgs/stress.svg',\n          imageWidth: 400,\n          imageHeight: 200,\n          imageAlt: 'Custom image',\n          confirmButtonColor: '#6c5ce7',\n        });\n      }\n    );\n  }\n\n  loadCartItems() {\n    this.cartService\n      .getCartItems(this.cartService.getUserId())\n      .subscribe((res) => {\n        this.cartItems = res;\n        this.calculeCartTotal();\n      });\n  }\n\n  calculeCartTotal() {\n    this.cartTotal = 0;\n    this.cartItems.forEach((product) => {\n      this.cartTotal += product.price;\n    });\n  }\n}\n","<div class=\"alert alert-info\" *ngIf=\"cartItems.length === 0\">\n  Tu carrito esta vacio.\n</div>\n<ul *ngIf=\"cartItems.length > 0\" class=\"list-group\">\n  <li class=\"list-group-item\" *ngFor=\"let item of cartItems\">\n    <app-cart-item [cartItem]=\"item\"></app-cart-item>\n  </li>\n  <li class=\"list-group-item total\">\n    Total: <strong>{{ cartTotal | currency: \"USD\" }}</strong>\n  </li>\n  <li class=\"list-group-item pagar\">\n    <button\n      type=\"button\"\n      class=\"btn btn-primary btn-block\"\n      (click)=\"cleanCart()\"\n    >\n      Vaciar\n    </button>\n    <button\n      type=\"button\"\n      class=\"btn btn-primary btn-block\"\n      (click)=\"loadCartUser()\"\n    >\n      Pagar\n    </button>\n  </li>\n</ul>\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { FormsModule, FormControl } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\nimport { FilterService } from 'src/app/services/filter.service';\n\n@Component({\n  selector: 'app-filter',\n  templateUrl: './filter.component.html',\n  styleUrls: ['./filter.component.css'],\n})\nexport class FilterComponent implements OnInit {\n  constructor(public filterService: FilterService) {}\n  valorFilter = '';\n  ngOnInit(): void {\n    this.traerDatoFilter();\n    this.filter.valueChanges.pipe(debounceTime(300)).subscribe((value) => {\n      this.valorFilter = value;\n      this.filterEmitter.emit(value);\n    });\n  }\n  traerDatoFilter() {\n    const datoFilter = this.filterService.entregarDato();\n    if (datoFilter != '' || !datoFilter) {\n      this.valorFilter = datoFilter;\n      this.filter.setValue(datoFilter);\n    }\n  }\n  filter = new FormControl('');\n\n  @Output('filter') filterEmitter = new EventEmitter<String>();\n}\n","<div class=\"card filters\">\n  <div class=\"card-header\">\n    Filtros\n  </div>\n  <div class=\"card-body\">\n    <form>\n      <div class=\"form-group\">\n        <label for=\"name\">Nombre</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          name=\"filterPost\"\n          [formControl]=\"filter\"\n          class=\"form-control\"\n        />\n      </div>\n      <button class=\"btn btn-primary btn-block\">Filtrar</button>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { FilterService } from 'src/app/services/filter.service';\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n})\nexport class HomeComponent implements OnInit {\n  constructor(\n    public authService: AuthService,\n    public filterService: FilterService\n  ) {}\n  filtroValor = '';\n  ngOnInit() {\n    this.cargarDatoEnFiltro();\n  }\n  handleSearch(value: string) {\n    const datos = this.filterService.entregarDato();\n    if (datos != '' || !datos) {\n      this.filtroValor = datos;\n    }\n    this.filtroValor = value;\n  }\n\n  recibirDatoFiltro() {\n    const datos = this.filterService.entregarDato();\n    return datos;\n  }\n\n  cargarDatoEnFiltro() {\n    const datoFiltrar = this.recibirDatoFiltro();\n    if (datoFiltrar != '' || !datoFiltrar) {\n      this.filtroValor = datoFiltrar;\n    }\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-2\">\n    <app-filter (filter)=\"handleSearch($event)\"></app-filter>\n  </div>\n  <div class=\"col-md-8\">\n    <app-product-list [filtroValor]=\"filtroValor\"></app-product-list>\n  </div>\n  <div class=\"col-md-2\" *ngIf=\"authService.loggedIn()\">\n    <app-cart></app-cart>\n  </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ProductListComponent } from '../product-list.component';\nimport { Router } from '@angular/router';\nimport { Product } from 'src/app/models/products';\nimport { MessengerService } from '../../../../services/messenger.service';\nimport { ShopcartService } from '../../../../services/shopcart.service';\nimport { WishlistService } from 'src/app/services/wishlist.service';\nimport Swal from 'sweetalert2';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-product-item',\n  templateUrl: './product-item.component.html',\n  styleUrls: ['./product-item.component.css'],\n})\nexport class ProductItemComponent implements OnInit {\n  @Input() product: Product;\n  //Corazon del html\n  @Input() addedToWishList: boolean;\n  constructor(\n    private router: Router,\n    private message: MessengerService,\n    private cartService: ShopcartService,\n    private wishList: WishlistService,\n    public authService: AuthService\n  ) {}\n\n  ngOnInit(): void {}\n  selectedCard(id: String) {\n    this.router.navigate(['/preview-products', id]);\n  }\n\n  handleAddToCart() {\n    const canAddtoCart = this.authService.loggedIn();\n    if (canAddtoCart) {\n      this.cartService\n        .addProductToCar(this.product, this.cartService.getUserId())\n        .subscribe(\n          () => {\n            this.message.sendMessage(this.product);\n          },\n          (err) => {\n            if (err.error.code_error === 'product_exist') {\n              Swal.fire({\n                title: 'Ya tienes un producto similar en tu carrito',\n                text: 'Disculpa las molestias',\n                imageUrl: '../../../../../assets/imgs/welcome.svg',\n                imageWidth: 400,\n                imageHeight: 200,\n                imageAlt: 'Custom image',\n                confirmButtonColor: '#6c5ce7',\n              });\n            }\n          }\n        );\n    } else {\n      Swal.fire({\n        title: 'Hola, gracias por visitarnos!',\n        text: 'Antes de añadir un producto, por favor inicia sesion.',\n        imageUrl: '../../../../../assets/imgs/welcome.svg',\n        imageWidth: 400,\n        imageHeight: 200,\n        imageAlt: 'Custom image',\n        confirmButtonColor: '#6c5ce7',\n      });\n    }\n  }\n\n  handleAddToWishList() {\n    this.wishList\n      .addToWishList(this.product, this.cartService.getUserId())\n      .subscribe(() => {\n        this.addedToWishList = true;\n      });\n  }\n  removeFromWishList() {\n    this.wishList\n      .removeFromWishList(this.cartService.getUserId(), this.product)\n      .subscribe(() => {\n        this.addedToWishList = false;\n      });\n  }\n}\n","<div class=\"card mb-4 shadow-sm\">\n  <div class=\"card-photo\" (click)=\"selectedCard(product._id)\">\n    <img\n      [src]=\"'http://localhost:3000/public/' + product.imageName\"\n      class=\"img-card-top w-100\"\n    />\n  </div>\n  <div class=\"card-body\">\n    <p class=\"card-text\">\n      <strong>{{ product.name }}</strong>\n      <br />\n      {{ product.description | slice: 0:50 }}...\n      <br />\n      Precio: <strong> {{ product.price | currency: \"USD\" }} </strong>\n      <i\n        *ngIf=\"addedToWishList\"\n        class=\"fas fa-heart float-right\"\n        (click)=\"removeFromWishList()\"\n      ></i>\n      <i\n        *ngIf=\"!addedToWishList && authService.loggedIn()\"\n        class=\"far fa-heart float-right\"\n        (click)=\"handleAddToWishList()\"\n      ></i>\n    </p>\n    <div class=\"d-flex justify-content-between align-items-center\">\n      <div class=\"btn-group\">\n        <button\n          type=\"button\"\n          class=\"btn btn-sm btn-outline-secondary btn-card-add\"\n          (click)=\"handleAddToCart()\"\n        >\n          Añadir al carrito\n        </button>\n        <button\n          type=\"button\"\n          class=\"btn btn-sm btn-outline-secondary btn-card-product\"\n          (click)=\"selectedCard(product._id)\"\n        >\n          Ver detalles\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ProductsService } from '../../../services/products.service';\nimport { WishlistService } from 'src/app/services/wishlist.service';\nimport { ShopcartService } from 'src/app/services/shopcart.service';\nimport Swal from 'sweetalert2';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { FilterComponent } from '../filter/filter.component';\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css'],\n})\nexport class ProductListComponent implements OnInit {\n  products: any = [];\n  wishList: any[] = [];\n  @Input() filtroValor: string;\n  constructor(\n    private productService: ProductsService,\n    private wishListService: WishlistService,\n    public shopCart: ShopcartService\n  ) {}\n\n  ngOnInit(): void {\n    this.loadProducts();\n    this.loadWishList();\n  }\n  loadProducts() {\n    this.productService.getProducts().subscribe(\n      (res) => {\n        this.products = res;\n      },\n      (err) => {\n        Swal.fire({\n          title: 'Hola, lo sentimos!',\n          text:\n            'Parece que tuvimos un problema con los productos, comunicate con el administrador.',\n          imageUrl: '../../../../../assets/imgs/stress.svg',\n          imageWidth: 400,\n          imageHeight: 200,\n          imageAlt: 'Custom image',\n          confirmButtonColor: '#6c5ce7',\n        });\n      }\n    );\n  }\n\n  loadWishList() {\n    if (this.shopCart.getToken()) {\n      this.wishListService\n        .getWishList(this.shopCart.getUserId())\n        .subscribe((res) => {\n          this.wishList = res;\n        });\n    }\n  }\n}\n","<div class=\"row\">\n  <div *ngIf=\"products.length < 1\">\n    <h1>LOADING...</h1>\n  </div>\n  <div class=\"col-md-4\" *ngFor=\"let product of products | filter: filtroValor\">\n    <app-product-item\n      [product]=\"product\"\n      [addedToWishList]=\"wishList.indexOf(product._id) >= 0\"\n    ></app-product-item>\n    <!-- El addedToWishList compara si existe un product id en la wishList para dejar marcado el corazon al refrescar la pagina -->\n  </div>\n</div>\n","import { Component, OnInit, EventEmitter } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ProductsService } from 'src/app/services/products.service';\nimport { Product } from 'src/app/models/products';\nimport Swal from 'sweetalert2';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { ShopcartService } from 'src/app/services/shopcart.service';\nimport { MessengerService } from 'src/app/services/messenger.service';\ninterface HtmlInputEvent extends Event {\n  target: HTMLInputElement & EventTarget;\n}\n@Component({\n  selector: 'app-preview-products',\n  templateUrl: './preview-products.component.html',\n  styleUrls: ['./preview-products.component.css'],\n  providers: [ProductsService],\n})\nexport class PreviewProductsComponent implements OnInit {\n  id: String;\n  product: Product;\n  updateProductForm: FormGroup;\n  photoSelected: string | ArrayBuffer;\n  pricePattern = /[0-9]/;\n  file: File;\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    public productService: ProductsService,\n    public fb: FormBuilder,\n    public cartService: ShopcartService,\n    private message: MessengerService,\n    private authService: AuthService\n  ) {\n    this.updateProductForm = this.fb.group({\n      name: ['', [Validators.required]],\n      description: ['', [Validators.required]],\n      price: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(2),\n          Validators.maxLength(7),\n          Validators.pattern(this.pricePattern),\n        ],\n      ],\n      inputImage: ['', []],\n    });\n  }\n\n  ngOnInit() {\n    this.activatedRoute.params.subscribe((params) => {\n      this.id = params['id'];\n      this.productService.getProduct(this.id).subscribe(\n        (res) => {\n          this.product = res;\n          this.updateProductForm.controls['description'].setValue(\n            res.description\n          );\n          this.updateProductForm.controls['name'].setValue(res.name);\n          this.updateProductForm.controls['price'].setValue(res.price);\n        },\n        (err) => {\n          console.log(err);\n        }\n      );\n    });\n  }\n\n  addToCar() {\n    const canAddtoCart = this.authService.loggedIn();\n    if (canAddtoCart) {\n      this.cartService\n        .addProductToCar(this.product, this.cartService.getUserId())\n        .subscribe(\n          () => {\n            this.message.sendMessage(this.product);\n            Swal.fire({\n              title: 'El producto ha sido añadido a tu carrito',\n              text: 'Gracias por preferirnos',\n              imageUrl: '../../../../../assets/imgs/sucessfullProduct.svg',\n              imageWidth: 400,\n              imageHeight: 200,\n              imageAlt: 'Custom image',\n              confirmButtonColor: '#6c5ce7',\n            }).then((result) => {\n              if (result.value) {\n                this.router.navigate(['/home']);\n              }\n            });\n          },\n          (err) => {\n            if (err.error.code_error === 'product_exist') {\n              Swal.fire({\n                title: 'Ya tienes un producto similar en tu carrito',\n                text: 'Disculpa las molestias',\n                imageUrl: '../../../../../assets/imgs/welcome.svg',\n                imageWidth: 400,\n                imageHeight: 200,\n                imageAlt: 'Custom image',\n                confirmButtonColor: '#6c5ce7',\n              });\n            }\n          }\n        );\n    } else {\n      Swal.fire({\n        title: 'Hola, gracias por visitarnos!',\n        text: 'Antes de añadir un producto, por favor inicia sesion.',\n        imageUrl: '../../../../../assets/imgs/welcome.svg',\n        imageWidth: 400,\n        imageHeight: 200,\n        imageAlt: 'Custom image',\n        confirmButtonColor: '#6c5ce7',\n      });\n    }\n  }\n  //Eliminamos producto\n  deleteProduct(id: String) {\n    Swal.fire({\n      title: '¿Estas seguro de querer eliminar este registro?',\n      text: 'No podras revertir esto!',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#6c5ce7',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Si, Borralo',\n    }).then((res) => {\n      if (res.value) {\n        this.productService.deleteProduct(id).subscribe(\n          (res) => {\n            Swal.fire({\n              title: 'Eliminado',\n              text: 'Tu registro se ha eliminado con exito.',\n              icon: 'success',\n              confirmButtonColor: '#6c5ce7',\n            });\n            this.router.navigate(['/home']);\n          },\n          (err) => {\n            Swal.fire({\n              icon: 'error',\n              title: 'Algo salio mal',\n              text: 'No pudimos eliminar tu registro',\n              confirmButtonColor: '#6c5ce7',\n            });\n          }\n        );\n      } else {\n        Swal.fire({\n          icon: 'error',\n          title: 'Algo salio mal',\n          text: 'No pudimos eliminar tu registro',\n          confirmButtonColor: '#6c5ce7',\n        });\n      }\n    });\n  }\n  resetForm(form?: FormGroup) {\n    if (form) {\n      form.reset();\n    }\n  }\n  //VALIDA SI LO QUE ESTOY INGRESANDO SON NUMEROS O LETRAS\n  onPriceIntroduced(event: KeyboardEvent) {\n    const inputChar = String.fromCharCode(event.charCode);\n    if (!this.pricePattern.test(inputChar)) {\n      // invalid character, prevent input\n      event.preventDefault();\n    }\n  }\n  onPhotoSelected(event: HtmlInputEvent): void {\n    if (event.target.files && event.target.files[0]) {\n      this.file = <File>event.target.files[0];\n      //Image Preview\n      const reader = new FileReader();\n      reader.onload = (e) => (this.photoSelected = reader.result);\n      reader.readAsDataURL(this.file);\n    }\n  }\n\n  updateProduct(id: String) {\n    this.productService\n      .updateProduct(id, this.updateProductForm.value, this.file)\n      .subscribe(\n        (res) => {\n          this.resetForm(this.updateProductForm);\n          Swal.fire({\n            title: 'Actualizacion exitosa!',\n            text: 'Juego actualizado correctamente',\n            icon: 'success',\n            confirmButtonColor: '#6c5ce7',\n          });\n          this.router.navigate(['/home']);\n        },\n        (err) => {\n          console.log(err);\n          Swal.fire({\n            icon: 'error',\n            title: 'Algo salio mal',\n            text: 'No pudimos agregar el juego',\n            confirmButtonColor: '#6c5ce7',\n          });\n        }\n      );\n  }\n}\n","<div class=\"row\" *ngIf=\"!product; else mainContent\">\n  <h1>Loading...</h1>\n</div>\n\n<ng-template #mainContent>\n  <div class=\"row\">\n    <div class=\"container\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          {{ product.name }}\n        </div>\n        <form\n          class=\"card-body container row\"\n          [formGroup]=\"updateProductForm\"\n          (ngSubmit)=\"updateProduct(product._id)\"\n        >\n          <div class=\"col-md-5 card-photo\">\n            <ng-container\n              *ngIf=\"productService.canManageProduct(); else notManaged\"\n            >\n              <input\n                type=\"file\"\n                class=\"form-control-file d-none position-static\"\n                id=\"uploadImage\"\n                name=\"image\"\n                formControlName=\"inputImage\"\n                (change)=\"onPhotoSelected($event)\"\n                enctype=\"multipart/form-data\"\n                #photoInput\n              />\n              <img\n                [src]=\"\n                  photoSelected ||\n                  'http://localhost:3000/public/' + product.imageName\n                \"\n                class=\"img-fluid img-card-top\"\n                (click)=\"photoInput.click()\"\n              />\n              <strong\n                ><p\n                  class=\"upload-label\"\n                  (click)=\"photoInput.click()\"\n                  *ngIf=\"productService.canManageProduct()\"\n                >\n                  Actualizar foto\n                </p></strong\n              >\n            </ng-container>\n            <ng-template #notManaged>\n              <img\n                [src]=\"\n                  photoSelected ||\n                  'http://localhost:3000/public/' + product.imageName\n                \"\n                class=\"img-fluid img-card-top\"\n              />\n            </ng-template>\n          </div>\n          <div class=\"col-md-7\">\n            <ng-container\n              *ngIf=\"productService.canManageProduct(); else userCorriente\"\n            >\n              <div class=\"form-group\">\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  placeholder=\"Nombre del juego\"\n                  [value]=\"product.name\"\n                  formControlName=\"name\"\n                  [ngClass]=\"{\n                    'is-invalid':\n                      updateProductForm.get('name').errors &&\n                      updateProductForm.get('name').dirty\n                  }\"\n                  required\n                />\n              </div>\n              <div\n                *ngIf=\"\n                  updateProductForm.get('name').errors &&\n                  updateProductForm.get('name').dirty\n                \"\n              >\n                <p\n                  *ngIf=\"updateProductForm.get('name').hasError('required')\"\n                  class=\"invalid-p\"\n                >\n                  Campo requerido\n                </p>\n              </div>\n              <div class=\"form-group\">\n                <textarea\n                  rows=\"4\"\n                  class=\"form-control\"\n                  placeholder=\"Ingrese la descripcion del juego\"\n                  formControlName=\"description\"\n                  [ngClass]=\"{\n                    'is-invalid':\n                      updateProductForm.get('description').errors &&\n                      updateProductForm.get('description').dirty\n                  }\"\n                >\n                </textarea>\n              </div>\n              <div\n                *ngIf=\"\n                  updateProductForm.get('description').errors &&\n                  updateProductForm.get('description').dirty\n                \"\n              >\n                <p\n                  *ngIf=\"\n                    updateProductForm.get('description').hasError('required')\n                  \"\n                  class=\"invalid-p\"\n                >\n                  Campo requerido\n                </p>\n              </div>\n              <div class=\"form-group\">\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  placeholder=\"Precio del juego: 4000, 50000\"\n                  [value]=\"product.price\"\n                  minlength=\"2\"\n                  maxlength=\"7\"\n                  formControlName=\"price\"\n                  [pattern]=\"pricePattern\"\n                  (keypress)=\"onPriceIntroduced($event)\"\n                  [ngClass]=\"{\n                    'is-invalid':\n                      updateProductForm.get('price').errors &&\n                      updateProductForm.get('price').dirty\n                  }\"\n                />\n              </div>\n              <div\n                *ngIf=\"\n                  updateProductForm.get('price').errors &&\n                  updateProductForm.get('price').dirty\n                \"\n              >\n                <p\n                  *ngIf=\"updateProductForm.get('price').hasError('pattern')\"\n                  class=\"invalid-p\"\n                >\n                  Ingrese un precio correcto: 4000, 44, 44.44\n                </p>\n                <p\n                  *ngIf=\"updateProductForm.get('price').hasError('required')\"\n                  class=\"invalid-p\"\n                >\n                  Campo requerido\n                </p>\n                <p\n                  *ngIf=\"updateProductForm.get('price').hasError('minlength')\"\n                  class=\"invalid-p\"\n                >\n                  El minimo de caracteres es de 2\n                </p>\n                <p\n                  *ngIf=\"updateProductForm.get('price').errors?.maxlength\"\n                  class=\"invalid-p\"\n                >\n                  El maximo de caracteres es de 7\n                </p>\n              </div>\n              <button\n                type=\"submit\"\n                class=\"btn btn-primary col-md-3\"\n                [disabled]=\"updateProductForm.invalid\"\n              >\n                Actualizar\n              </button>\n              <a\n                class=\"btn btn-danger col-md-3\"\n                (click)=\"deleteProduct(product._id)\"\n              >\n                Eliminar\n              </a>\n            </ng-container>\n            <p></p>\n            <a\n              class=\"btn btn-primary col-md-5 btn-carrito\"\n              (click)=\"addToCar()\"\n            >\n              Añadir al carrito\n            </a>\n          </div>\n        </form>\n        <ng-template #userCorriente>\n          <p class=\"tittle-game\">{{ product.name }}</p>\n          <p class=\"description-game\">{{ product.description }}</p>\n          <p class=\"price-game\">{{ product.price | currency: \"USD\" }}</p>\n        </ng-template>\n      </div>\n    </div>\n  </div>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-private-games',\n  templateUrl: './private-games.component.html',\n  styleUrls: ['./private-games.component.css']\n})\nexport class PrivateGamesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  private-games works!\n</p>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { UsersService } from 'src/app/services/users.service';\nimport Swal from 'sweetalert2';\nimport { Router } from '@angular/router';\n\ninterface HtmlInputEvent extends Event {\n  target: HTMLInputElement & EventTarget;\n}\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css'],\n})\nexport class ProfileComponent implements OnInit {\n  user: any;\n  profileForm: FormGroup;\n  emailPattern =\n    \"^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$\";\n  constructor(\n    public authService: AuthService,\n    private fb: FormBuilder,\n    public userService: UsersService,\n    private router: Router\n  ) {\n    this.profileForm = this.fb.group({\n      name: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.pattern(this.emailPattern)]],\n      passwordActual: [''],\n      passwordNueva: [''],\n    });\n  }\n\n  ngOnInit() {\n    this.traerDatos();\n  }\n\n  traerDatos() {\n    const idUser = this.authService.decodeToken().id;\n    this.userService.getProfile(idUser).subscribe((res) => {\n      this.user = res;\n      this.profileForm.controls['email'].setValue(res.email);\n      this.profileForm.controls['name'].setValue(res.name);\n    });\n  }\n  guardarCambios(id) {\n    this.userService.updateProfile(id, this.profileForm.value).subscribe(\n      (res) => {\n        Swal.fire({\n          title: 'Perfil actualizado',\n          imageUrl: '../../../assets/imgs/people.svg',\n          imageWidth: 400,\n          imageHeight: 200,\n          imageAlt: 'Custom image',\n          confirmButtonColor: '#6c5ce7',\n        }).then((result) => {\n          if (result.value) {\n            this.router\n              .navigateByUrl('/RefreshComponent', {\n                skipLocationChange: true,\n              })\n              .then(() => {\n                this.router.navigate([`/profile/${id}`]);\n              });\n          }\n        });\n      },\n      (err) => {\n        Swal.fire({\n          title: 'Parece que hubo un error actualizando tu perfil',\n          text: 'Comunicate con el administrador del sistema',\n          imageUrl: '../../../assets/imgs/stress.svg',\n          imageWidth: 400,\n          imageHeight: 200,\n          imageAlt: 'Custom image',\n          confirmButtonColor: '#6c5ce7',\n        }).then((result) => {\n          if (result.value) {\n            this.router\n              .navigateByUrl('/RefreshComponent', {\n                skipLocationChange: true,\n              })\n              .then(() => {\n                this.router.navigate([`/profile/${id}`]);\n              });\n          }\n        });\n      }\n    );\n  }\n}\n","<div class=\"row\">\n  <div class=\"container col-md-7\">\n    <div class=\"card-header\"><h3>Mis datos personales</h3></div>\n    <form\n      class=\"card-body container row\"\n      [formGroup]=\"profileForm\"\n      (ngSubmit)=\"guardarCambios(user._id)\"\n    >\n      <div>\n        <div class=\"form-row\">\n          <div class=\"form-group col-md-6\">\n            <label for=\"email\">Email</label>\n            <input\n              type=\"email\"\n              class=\"form-control\"\n              formControlName=\"email\"\n              [ngClass]=\"{\n                'is-invalid':\n                  profileForm.get('email').errors &&\n                  profileForm.get('email').dirty\n              }\"\n              placeholder=\"email@email.com\"\n              [pattern]=\"emailPattern\"\n              required\n            />\n            <div\n              *ngIf=\"\n                profileForm.get('email').errors &&\n                profileForm.get('email').dirty\n              \"\n            >\n              <p\n                *ngIf=\"profileForm.get('email').hasError('required')\"\n                class=\"invalid-p\"\n              >\n                Campo requerido\n              </p>\n              <p\n                *ngIf=\"profileForm.get('email').hasError('pattern')\"\n                class=\"invalid-p\"\n              >\n                Ingrese un email valido\n              </p>\n            </div>\n          </div>\n\n          <div class=\"form-group col-md-6\">\n            <label for=\"passwordActual\">Contraseña actual</label>\n            <input\n              type=\"password\"\n              class=\"form-control\"\n              formControlName=\"passwordActual\"\n              placeholder=\"Ingresa tu contraseña\"\n              [ngClass]=\"{\n                'is-invalid':\n                  profileForm.get('passwordActual').errors &&\n                  profileForm.get('passwordActual').dirty\n              }\"\n            />\n          </div>\n          <div class=\"form-group col-md-6\">\n            <label for=\"passwordNueva\">Nueva contraseña</label>\n            <input\n              type=\"password\"\n              class=\"form-control\"\n              formControlName=\"passwordNueva\"\n              placeholder=\"Ingresa tu nueva contraseña\"\n              [ngClass]=\"{\n                'is-invalid':\n                  profileForm.get('passwordNueva').errors &&\n                  profileForm.get('passwordNueva').dirty\n              }\"\n            />\n          </div>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"name\">Nombre</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            placeholder=\"Ingresa tu nombre\"\n            formControlName=\"name\"\n            [ngClass]=\"{\n              'is-invalid':\n                profileForm.get('name').errors && profileForm.get('name').dirty\n            }\"\n            required\n          />\n        </div>\n        <div\n          *ngIf=\"\n            profileForm.get('name').errors && profileForm.get('name').dirty\n          \"\n        >\n          <p\n            *ngIf=\"profileForm.get('name').hasError('required')\"\n            class=\"invalid-p\"\n          >\n            Campo requerido\n          </p>\n        </div>\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-guardar\"\n          [disabled]=\"profileForm.invalid\"\n        >\n          Guardar cambios\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page404',\n  templateUrl: './page404.component.html',\n  styleUrls: ['./page404.component.css']\n})\nexport class Page404Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col-md-4 offset-md-4\">\n    <div class=\"card\">\n      <div class=\"card-header\">\n        <h3>404 - Pagina no encontrada</h3>\n        <img src=\"../../../../assets/imgs/404.svg\" width=\"50px\" height=\"50px\" />\n      </div>\n      <div class=\"card-body\">\n        <p>\n          Oops... Algo ha salido mal, la pagina que buscabas no esta disponible\n        </p>\n        <p>\n          <a routerLink=\"/\">Regresar al inicio</a>\n        </p>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport { AppComponent } from 'src/app/app.component';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css'],\n})\nexport class SigninComponent implements OnInit {\n  user = { email: '', password: '' };\n  loginForm: FormGroup;\n  emailPattern =\n    '^[a-z0-9!#$%&\\'*+/=?^_`{|}~-]+(?:.[a-z0-9!#$%&\\'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$';\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private fb: FormBuilder\n  ) {\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.pattern(this.emailPattern)]],\n      password: ['', [Validators.required, Validators.maxLength(140)]],\n    });\n  }\n\n  ngOnInit() {}\n\n  signIn() {\n    this.authService.signIn(this.loginForm.value).subscribe(\n      (res) => {\n        this.authService.setToken(res.token);\n        this.authService.decodeToken(); // USO EL DECODE TOKEN\n        AppComponent.updateUserStatus.next(true);\n        this.router.navigate(['/home']);\n        Swal.fire({\n          icon: 'success',\n          title: 'Bienvenido ' + res.datos.nombre_usuario,\n          text: 'Tu Rol es: ' + res.datos.rol,\n          confirmButtonColor: '#6c5ce7',\n        });\n      },\n      (err) => {\n        switch (err.error.code_error) {\n          case 'account_noexists':\n            Swal.fire({\n              icon: 'error',\n              title: 'Error',\n              text: 'Cuenta inexistente',\n              confirmButtonColor: '#6c5ce7',\n            });\n            break;\n          case 'password_wrong':\n            Swal.fire({\n              icon: 'error',\n              title: 'Error',\n              text: 'Contraseña incorrecta, intentelo de nuevo',\n              confirmButtonColor: '#6c5ce7',\n            })\n            break;\n          default:\n            Swal.fire({\n              icon: 'error',\n              title: 'Error',\n              text: 'Hubo un error en el inicio de sesion, intentelo de nuevo',\n              confirmButtonColor: '#6c5ce7',\n            });\n            break;\n        }\n      }\n    );\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-4 mx-auto\">\n    <div class=\"card\">\n      <div class=\"card-header\">\n        Iniciar Sesion\n      </div>\n      <div class=\"card-body\">\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"signIn()\">\n          <div class=\"form-group\">\n            <input\n              type=\"email\"\n              class=\"form-control\"\n              formControlName=\"email\"\n              placeholder=\"Ingresa tu email\"\n              [ngClass]=\"{\n                'is-invalid':\n                  loginForm.get('email').errors && loginForm.get('email').dirty\n              }\"\n              required\n              autofocus\n              [pattern]=\"emailPattern\"\n            />\n          </div>\n          <div\n            *ngIf=\"\n              loginForm.get('email').errors && loginForm.get('email').dirty\n            \"\n          >\n            <p *ngIf=\"loginForm.get('email').hasError('required')\">\n              Campo requerido\n            </p>\n            <p *ngIf=\"loginForm.get('email').hasError('pattern')\">\n              Ingrese un email valido\n            </p>\n          </div>\n          <div class=\"form-group\">\n            <input\n              type=\"password\"\n              class=\"form-control\"\n              formControlName=\"password\"\n              [ngClass]=\"{\n                'is-invalid':\n                  loginForm.get('password').errors &&\n                  loginForm.get('password').dirty\n              }\"\n              placeholder=\"Ingresa tu contraseña\"\n              required\n            />\n          </div>\n          <button\n            type=\"submit\"\n            class=\"btn btn-primary btn-block\"\n            [disabled]=\"loginForm.invalid\"\n          >\n            Iniciar Sesion\n          </button>\n          <small id=\"registerText\" class=\"form-text text-muted\"\n            >¿Nuevo en GeekyShop?\n            <a routerLink=\"/signup\">Registrate</a>\n          </small>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\nimport Swal from 'sweetalert2';\nimport { AppComponent } from 'src/app/app.component';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css'],\n})\nexport class SignupComponent implements OnInit {\n  user = { name: '', email: '', password: '' };\n  registerForm: FormGroup;\n  emailPattern =\n    \"^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$\";\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private fb: FormBuilder\n  ) {\n    this.registerForm = this.fb.group({\n      name: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.pattern(this.emailPattern)]],\n      password: ['', [Validators.required, Validators.minLength(4)]],\n    });\n  }\n\n  ngOnInit() {}\n\n  signUp() {\n    this.authService.signUp(this.registerForm.value).subscribe(\n      (res) => {\n        this.authService.setToken(res.token);\n        this.authService.decodeToken();\n        AppComponent.updateUserStatus.next(true);\n        this.router.navigate(['/home']);\n        Swal.fire({\n          icon: 'success',\n          title: 'Registro Exitoso ' + res.datos.nombre_usuario,\n          text: 'Tu Rol es: ' + res.datos.rol,\n          confirmButtonColor: '#6c5ce7',\n        });\n      },\n      (err) => {\n        switch (err.error.code_error) {\n          case 'password_invalid':\n            Swal.fire({\n              icon: 'error',\n              title: 'Error',\n              text:\n                'Contraseña invalida, por favor, ingrese mas de 4 caracteres',\n            });\n            break;\n          case 'email_existent':\n            Swal.fire({\n              icon: 'error',\n              title: 'Error',\n              text: 'Ese correo ya esta registrado, ingresa uno nuevo',\n              confirmButtonColor: '#6c5ce7',\n            });\n            break;\n          case 'email_invalid':\n            Swal.fire({\n              icon: 'error',\n              title: 'Error',\n              text: 'Este email es invalido, por favor ingrese otro',\n            });\n            break;\n          default:\n            Swal.fire({\n              icon: 'error',\n              title: 'Error',\n              text:\n                'Hubo un error en el registro, ingresa de nuevo tus credenciales',\n            });\n            break;\n        }\n      }\n    );\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-4 mx-auto\">\n    <div class=\"card\">\n      <div class=\"card-header\">\n        Registrate\n      </div>\n      <div class=\"card-body\">\n        <form [formGroup]=\"registerForm\" (ngSubmit)=\"signUp()\">\n          <div class=\"form-group\">\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              placeholder=\"Ingresa tu nombre\"\n              formControlName=\"name\"\n              [ngClass]=\"{\n                'is-invalid':\n                  registerForm.get('name').errors &&\n                  registerForm.get('name').dirty\n              }\"\n              required\n              autofocus\n            />\n          </div>\n          <div\n            *ngIf=\"\n              registerForm.get('name').errors && registerForm.get('name').dirty\n            \"\n          >\n            <p\n              *ngIf=\"registerForm.get('name').hasError('required')\"\n              class=\"invalid-p\"\n            >\n              Campo requerido\n            </p>\n          </div>\n          <div class=\"form-group\">\n            <input\n              type=\"email\"\n              class=\"form-control\"\n              placeholder=\"Ingresa tu email\"\n              formControlName=\"email\"\n              [ngClass]=\"{\n                'is-invalid':\n                  registerForm.get('email').errors &&\n                  registerForm.get('email').dirty\n              }\"\n              [pattern]=\"emailPattern\"\n              required\n            />\n          </div>\n          <div\n            *ngIf=\"\n              registerForm.get('email').errors &&\n              registerForm.get('email').dirty\n            \"\n          >\n            <p\n              *ngIf=\"registerForm.get('email').hasError('required')\"\n              class=\"invalid-p\"\n            >\n              Campo requerido\n            </p>\n            <p\n              *ngIf=\"registerForm.get('email').hasError('pattern')\"\n              class=\"invalid-p\"\n            >\n              Ingrese un email valido\n            </p>\n          </div>\n          <div class=\"form-group\">\n            <input\n              type=\"password\"\n              class=\"form-control\"\n              formControlName=\"password\"\n              placeholder=\"Ingresa tu contraseña\"\n              [ngClass]=\"{\n                'is-invalid':\n                  registerForm.get('password').errors &&\n                  registerForm.get('password').dirty\n              }\"\n              required\n              minlength=\"4\"\n            />\n          </div>\n          <div\n            *ngIf=\"\n              registerForm.get('password').errors &&\n              registerForm.get('password').dirty\n            \"\n          >\n            <p\n              *ngIf=\"registerForm.get('password').hasError('required')\"\n              class=\"invalid-p\"\n            >\n              Campo requerido\n            </p>\n            <p\n              *ngIf=\"registerForm.get('password').hasError('minlength')\"\n              class=\"invalid-p\"\n            >\n              El minimo de caracteres es de 4\n            </p>\n          </div>\n          <small id=\"registerText\" class=\"form-text text-muted\"\n            >¿Ya tienes una cuenta?\n            <a routerLink=\"/signin\">Inicia sesion</a>\n          </small>\n          <button\n            type=\"submit\"\n            class=\"btn btn-primary btn-block\"\n            [disabled]=\"registerForm.invalid\"\n          >\n            Registrarse\n          </button>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { UsersService } from 'src/app/services/users.service';\nimport { Router } from '@angular/router';\nimport { User } from 'src/app/models/users';\nimport Swal from 'sweetalert2';\nimport { RolesService } from 'src/app/services/roles.service';\nimport { ShopcartService } from 'src/app/services/shopcart.service';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css'],\n})\nexport class UsersComponent implements OnInit {\n  id: String;\n  userModificador: any;\n  user = { name: '', email: '', rol: '' };\n  roles: any;\n  onEditUser: boolean;\n  createUserForm: FormGroup;\n  emailPattern =\n    \"^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$\";\n  constructor(\n    public authService: AuthService,\n    private fb: FormBuilder,\n    public userService: UsersService,\n    public rolService: RolesService,\n    public getUserId: ShopcartService\n  ) {\n    this.createUserForm = this.fb.group({\n      name: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.pattern(this.emailPattern)]],\n      rol: ['', [Validators.required]],\n    });\n  }\n\n  ngOnInit() {\n    this.getUserModificador();\n    this.getUsers();\n    this.getRoles();\n    this.createUserForm.controls['rol'].setValue('usuario');\n    this.deshabilitarInputs();\n    this.onEditUser = false;\n  }\n\n  deshabilitarInputs() {\n    this.createUserForm.controls['name'].disable();\n    this.createUserForm.controls['email'].disable();\n    this.createUserForm.controls['rol'].disable();\n  }\n\n  habilitarInputs() {\n    this.createUserForm.controls['name'].enable();\n    this.createUserForm.controls['email'].enable();\n    this.createUserForm.controls['rol'].enable();\n  }\n\n  getUserModificador() {\n    this.userService.getProfile(this.getUserId.getUserId()).subscribe((res) => {\n      this.userModificador = res;\n    });\n  }\n  getUsers() {\n    this.userService.getUsers().subscribe((res) => {\n      this.userService.users = res as User[];\n    });\n  }\n  getRoles() {\n    this.rolService.getRoles().subscribe((res) => {\n      this.roles = res;\n    });\n  }\n  resetForm(form?: FormGroup) {\n    if (form) {\n      form.reset();\n      this.createUserForm.controls['rol'].setValue('usuario');\n      this.userService.selectedUser = new User();\n    }\n  }\n\n  addUser() {\n    if (this.onEditUser == true) {\n      this.userService\n        .updateProfile(this.id, this.createUserForm.value)\n        .subscribe(\n          (res) => {\n            this.resetForm(this.createUserForm);\n            this.getUsers();\n            this.deshabilitarInputs();\n            Swal.fire({\n              title: 'Actualizacion exitosa!',\n              text: 'Empleado actualizado correctamente',\n              icon: 'success',\n              confirmButtonColor: '#6c5ce7',\n            });\n          },\n          (err) => {\n            console.log(err);\n          }\n        );\n    }\n  }\n\n  editUser(user) {\n    this.habilitarInputs();\n    this.id = user._id;\n    this.userService.selectedUser = user;\n    this.createUserForm.controls['name'].setValue(user.name);\n    this.createUserForm.controls['email'].setValue(user.email);\n    this.createUserForm.controls['rol'].setValue(user.rol);\n    this.onEditUser = true;\n  }\n\n  deleteUser(_id: string) {\n    console.log(this.userModificador);\n    Swal.fire({\n      title: '¿Estas seguro de querer eliminar este registro?',\n      text: 'No podras revertir esto!',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#6c5ce7',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Si, Borralo',\n    }).then((result) => {\n      if (result.value) {\n        this.userService.deleteUser(_id, this.userModificador).subscribe(\n          (res) => {\n            Swal.fire({\n              title: 'Eliminado',\n              text: 'Tu registro se ha eliminado con exito.',\n              icon: 'success',\n              confirmButtonColor: '#6c5ce7',\n            });\n            this.getUsers();\n          },\n          (err) => {\n            Swal.fire({\n              icon: 'error',\n              title: 'Algo salio mal',\n              text: 'No pudimos eliminar tu registro',\n              confirmButtonColor: '#6c5ce7',\n            });\n          }\n        );\n      } else {\n        Swal.fire({\n          icon: 'error',\n          title: 'Algo salio mal',\n          text: 'No pudimos eliminar tu registro',\n          confirmButtonColor: '#6c5ce7',\n        });\n      }\n    });\n  }\n}\n","<div class=\"row\">\n  <div class=\"container col-5\">\n    <div class=\"card\">\n      <div class=\"card-header\">\n        Gestion de usuarios\n      </div>\n      <div class=\"card-body\">\n        <form [formGroup]=\"createUserForm\" (ngSubmit)=\"addUser()\">\n          <div class=\"form-group\">\n            <div class=\"form-group\">\n              <label for=\"nombre\">Nombre del usuario</label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                name=\"name\"\n                formControlName=\"name\"\n                [ngClass]=\"{\n                  'is-invalid':\n                    createUserForm.get('name').errors &&\n                    createUserForm.get('name').dirty\n                }\"\n                placeholder=\"Ingresa el nuevo nombre\"\n                required\n              />\n            </div>\n            <div\n              *ngIf=\"\n                createUserForm.get('name').errors &&\n                createUserForm.get('name').dirty\n              \"\n            >\n              <p\n                *ngIf=\"createUserForm.get('name').hasError('required')\"\n                class=\"invalid-p\"\n              >\n                Campo requerido\n              </p>\n            </div>\n            <div class=\"form-group\">\n              <label for=\"email\">Email del usuario</label>\n              <input\n                type=\"email\"\n                class=\"form-control\"\n                placeholder=\"Ingresa el nuevo email\"\n                formControlName=\"email\"\n                [ngClass]=\"{\n                  'is-invalid':\n                    createUserForm.get('email').errors &&\n                    createUserForm.get('email').dirty\n                }\"\n                [pattern]=\"emailPattern\"\n              />\n            </div>\n            <div\n              *ngIf=\"\n                createUserForm.get('email').errors &&\n                createUserForm.get('email').dirty\n              \"\n            >\n              <p\n                *ngIf=\"createUserForm.get('email').hasError('required')\"\n                class=\"invalid-p\"\n              >\n                Campo requerido\n              </p>\n              <p\n                *ngIf=\"createUserForm.get('email').hasError('pattern')\"\n                class=\"invalid-p\"\n              >\n                Ingrese un email valido\n              </p>\n            </div>\n            <div class=\"form-group\" *ngIf=\"authService.isAdmin()\">\n              <label for=\"rol\">Rol del empleado</label>\n              <select formControlName=\"rol\">\n                <option [value]=\"rol\" *ngFor=\"let rol of roles\">{{\n                  rol\n                }}</option>\n              </select>\n            </div>\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary\"\n              style=\"margin-left: 2px;\"\n              [disabled]=\"createUserForm.invalid\"\n            >\n              Guardar\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-primary\"\n              (click)=\"resetForm(createUserForm)\"\n            >\n              Limpiar\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n  <div class=\"container table-employee col-6\">\n    <table class=\"table table-bordered\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Email</th>\n          <th>Rol</th>\n          <th>Operaciones</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let user of userService.users\">\n          <td>{{ user.name }}</td>\n          <td>{{ user.email }}</td>\n          <td>{{ user.rol }}</td>\n          <td class=\"icons\">\n            <a (click)=\"editUser(user)\">\n              <i class=\"material-icons\">edit</i>\n            </a>\n            <a (click)=\"deleteUser(user._id)\" *ngIf=\"authService.isAdmin()\">\n              <i class=\"material-icons\" style=\"margin-left: 40px;\">delete</i>\n            </a>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  Router,\n} from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthBackToLoginGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean {\n    if (this.authService.loggedIn()) {\n      this.router.navigate(['/home'], {\n        queryParams: {\n          returnUrl: state.url,\n        },\n      });\n      return false;\n    }\n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  Router,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthRoleAdminGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean {\n    if (this.authService.isAdmin()) {\n      return true;\n    }\n    this.router.navigate(['/home'], {\n      queryParams: {\n        returnUrl: state.url,\n      },\n    });\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  Router,\n} from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthRoleEmployeeGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean {\n    if (this.authService.isEmployee() || this.authService.isAdmin()) {\n      return true;\n    }\n    this.router.navigate(['/home'], {\n      queryParams: {\n        returnUrl: state.url,\n      },\n    });\n    return false;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n} from \"@angular/router\";\nimport { AuthService } from \"../services/auth.service\";\nimport { Router } from \"@angular/router\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean {\n    if (this.authService.loggedIn()) {\n      return true;\n    }\n    this.router.navigate([\"/signin\"], {\n      queryParams: {\n        returnUrl: state.url,\n      },\n    });\n    return false;\n  }\n}\n","export class CartItem {\n  constructor(_id: '', productId, userId) {\n    this._id = _id;\n    this.productId = productId;\n    this.userId = userId;\n  }\n  _id: string;\n  productId: string;\n  userId: string;\n}\n","export class Employee {\n  constructor(_id = '', name = '', position = '', officine = '', salary = 0) {\n    this._id = _id;\n    this.name = name;\n    this.position = position;\n    this.officine = officine;\n    this.salary = salary;\n  }\n\n  _id: string;\n  name: string;\n  position: string;\n  officine: string;\n  salary: number;\n}\n","export class Product {\r\n  constructor(\r\n    _id = '',\r\n    name = '',\r\n    description = '',\r\n    price = 0,\r\n    imagePath = '',\r\n    imageName = ''\r\n  ) {\r\n    this._id = _id;\r\n    this.name = name;\r\n    this.description = description;\r\n    this.price = price;\r\n    this.imagePath = imagePath;\r\n    this.imageName = imageName;\r\n  }\r\n\r\n  _id: string;\r\n  name: string;\r\n  description: string;\r\n  price: number;\r\n  imagePath: string;\r\n  imageName: string;\r\n}\r\n","export class User {\n  constructor(_id = '', name = '', email = '', password = '', rol = '') {\n    this._id = _id;\n    this.name = name;\n    this.email = email;\n    this.password = password;\n    this.rol = rol;\n  }\n\n  _id: string;\n  name: string;\n  email: string;\n  password: string;\n  rol: string;\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { listLazyRoutes } from '@angular/compiler/src/aot/lazy_routes';\n\n@Pipe({\n  name: 'filter',\n})\nexport class FilterPipe implements PipeTransform {\n  transform(lista: any[], texto: string): any {\n    if (!texto) {\n      return lista;\n    }\n    return lista.filter((product) =>\n      product.name.toUpperCase().includes(texto.toUpperCase())\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { map } from 'rxjs/operators';\nimport * as jwt_decode from 'jwt-decode';\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private URL = 'http://localhost:3000';\n  constructor(private http: HttpClient, private router: Router) {}\n\n  signUp(user) {\n    return this.http.post<any>('/signup', user).pipe(map((res) => res));\n  }\n\n  signIn(user): Observable<any> {\n    return this.http.post<any>('/signin', user).pipe(map((res) => res));\n  }\n\n  loggedIn() {\n    if (localStorage.getItem('token')) {\n      return true;\n    }\n  }\n\n  getToken() {\n    return localStorage.getItem('token');\n  }\n\n  isAdmin() {\n    if (this.loggedIn) {\n      const rol = this.decodeToken().rol;\n      if (rol != 'admin') {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  isEmployee() {\n    if (this.loggedIn) {\n      const rol = this.decodeToken().rol;\n      if (rol != 'empleado' && rol != 'admin') {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  logOut() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('datos');\n    this.router.navigate(['/home']);\n  }\n\n  setToken(token) {\n    localStorage.setItem('token', token);\n  }\n\n  //DECODIFICO EL TOKEN PARA SACAR LOS DATOS QUE ENVIO DESDE EL BACKEND\n  decodeToken() {\n    let token = this.getToken(); //TRAIGO EL TOKEN\n    let decode = jwt_decode(token); //LO DE CODIFICO\n    return decode; // LO RETORNO, LO USO EN SIGNIN-SIGNUP, ETC.\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Employee } from '../models/employee';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EmployeeService {\n  selectedEmployee: Employee;\n  employees: Employee[];\n  readonly URL_API = 'http://localhost:3000';\n\n  constructor(private http: HttpClient) {\n    this.selectedEmployee = new Employee();\n  }\n\n  postEmployee(Employee) {\n    return this.http\n      .post<Employee>('/employees', Employee)\n      .pipe(map((res) => res));\n  }\n\n  getEmployees() {\n    return this.http.get('/employees');\n  }\n\n  putEmployee(id: String, Employee) {\n    return this.http\n      .put<Employee>('/employees' + `/${id}`, Employee)\n      .pipe(map((res) => res));\n  }\n\n  deleteEmployee(_id: string) {\n    return this.http.delete('/employees' + `/${_id}`);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FilterService {\n  datoFilter = '';\n  constructor() {}\n\n  tomarDatos(dato) {\n    this.datoFilter = dato;\n    return dato;\n  }\n  entregarDato() {\n    return this.datoFilter;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n@Injectable({\n  providedIn: 'root',\n})\nexport class MessengerService {\n  subject = new Subject();\n\n  constructor() {}\n\n  sendMessage(product) {\n    this.subject.next(product); //Triggering an event\n  }\n\n  getMessage() {\n    return this.subject.asObservable();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Product } from '../models/products';\nimport * as jwt_decode from 'jwt-decode';\nimport { Observable } from 'rxjs';\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductsService {\n  private URL = 'http://localhost:3000';\n  selectedProduct: Product;\n  products: Product[];\n  constructor(private http: HttpClient) {\n    this.selectedProduct = new Product();\n  }\n\n  createProduct(product, photo: File) {\n    const formData = new FormData();\n    formData.append('name', product.name);\n    formData.append('description', product.description);\n    formData.append('price', product.price);\n    formData.append('image', photo);\n    return this.http\n      .post<Product>('/products', formData)\n      .pipe(map((res) => res));\n  }\n\n  getProducts(): Observable<Product> {\n    return this.http.get<Product>('/products').pipe(map((res) => res));\n  }\n\n  getProduct(id: String) {\n    return this.http\n      .get<Product>('/products' + `/${id}`)\n      .pipe(map((res) => res));\n  }\n  deleteProduct(id: String) {\n    return this.http\n      .delete<Product>('/products' + `/${id}`)\n      .pipe(map((res) => res));\n  }\n  updateProduct(id: String, product, photo: File) {\n    const formData = new FormData();\n    formData.append('name', product.name);\n    formData.append('description', product.description);\n    formData.append('price', product.price);\n    formData.append('image', photo);\n    return this.http\n      .put<Product>('/products' + `/${id}`, formData)\n      .pipe(map((res) => res));\n  }\n\n  canManageProduct() {\n    if (localStorage.getItem('token')) {\n      const rol = this.decodeToken().rol;\n      if (rol == 'empleado' || rol == 'admin') {\n        return true;\n      }\n    }\n  }\n  //DECODIFICO EL TOKEN PARA SACAR LOS DATOS QUE ENVIO DESDE EL BACKEND\n  decodeToken() {\n    let token = localStorage.getItem('token'); //TRAIGO EL TOKEN\n    let decode = jwt_decode(token); //LO DECODIFICO\n    return decode; // LO RETORNO, LO USO EN SIGNIN-SIGNUP, ETC.\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RolesService {\n  private URL = 'http://localhost:3000';\n  constructor(private http: HttpClient) {}\n\n  getRoles() {\n    return this.http.get(`/rol`).pipe(map((res) => res));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CartItem } from '../models/cart-item';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Product } from '../models/products';\nimport { map } from 'rxjs/operators';\nimport Swal from 'sweetalert2';\nimport * as jwt_decode from 'jwt-decode';\nimport { User } from '../models/users';\n@Injectable({\n  providedIn: 'root',\n})\nexport class ShopcartService {\n  private URL = 'http://localhost:3000';\n  constructor(private http: HttpClient) {}\n\n  getCartItems(idUser): Observable<CartItem[]> {\n    return this.http.get<CartItem[]>('/cart' + `/${idUser}`).pipe(\n      map((result: any) => {\n        let cartItems: CartItem[] = [];\n        for (let item of result.carts) {\n          cartItems.push(new CartItem(item._id, item.productId, item.userId));\n        }\n        return result.producto;\n      })\n    );\n  }\n\n  getCartUser(idUser) {\n    return this.http.get(`/cart/${idUser}`).pipe(\n      map((result: any) => {\n        return result.carts;\n      })\n    );\n  }\n\n  addProductToCar(product, userId) {\n    const data = {\n      productId: product._id,\n      userId: userId,\n    };\n    return this.http.post<CartItem>('/cart', data).pipe(map((res) => res));\n  }\n  deleteProductFromCar(product, userId) {\n    const data = {\n      productId: product._id,\n      userId: userId,\n    };\n    return this.http.put<CartItem>(`/cart/${userId}`, data);\n  }\n  cleanCart(userId) {\n    return this.http.delete<CartItem>(`/cart/${userId}`);\n  }\n  getUserId() {\n    const userId = this.decodeToken().id;\n    return userId;\n  }\n  decodeToken() {\n    let token = this.getToken(); //TRAIGO EL TOKEN\n    let decode = jwt_decode(token); //LO DE CODIFICO\n    return decode; // LO RETORNO, LO USO EN SIGNIN-SIGNUP, ETC.\n  }\n  getToken() {\n    return localStorage.getItem('token');\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpInterceptor } from \"@angular/common/http\";\nimport { AuthService } from \"../services/auth.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class TokenInterceptorService implements HttpInterceptor {\n  constructor(public authService: AuthService) {}\n\n  intercept(req, next) {\n    const tokenReq = req.clone({\n      setHeaders: {\n        Authorization: `Bearer ${this.authService.getToken()}`,\n      },\n    });\n    return next.handle(tokenReq);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { User } from '../models/users';\nimport { map } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UsersService {\n  selectedUser: User;\n  users: User[];\n  private URL = 'http://localhost:3000';\n  constructor(private http: HttpClient) {}\n  getProfile(userId): Observable<User> {\n    return this.http.get<User>(`/user/${userId}`).pipe(map((res) => res));\n  }\n\n  updateProfile(userId, User): Observable<User> {\n    return this.http.put<User>(`/user/${userId}`, User).pipe(map((res) => res));\n  }\n\n  getUsers() {\n    return this.http.get(`/user`);\n  }\n\n  createUser(User) {\n    return this.http.post<User>(`/user`, User).pipe(map((res) => res));\n  }\n\n  deleteUser(id, user) {\n    return this.http.post(`/user/${id}`, user).pipe(map((res) => res));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { WishList } from '../models/wishlist';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class WishlistService {\n  private URL = 'http://localhost:3000';\n  constructor(private http: HttpClient) {}\n\n  getWishList(idUser) {\n    return this.http.get('/wishlist' + `/${idUser}`).pipe(\n      map((result: any) => {\n        let productIds = [];\n        for (let item of result.products) {\n          productIds.push(item._id);\n        }\n        return productIds;\n      })\n    );\n  }\n\n  addToWishList(product, userId): Observable<any> {\n    const data = {\n      productId: product._id,\n      userId: userId,\n    };\n    return this.http.post<WishList>('/wishlist', data).pipe(map((res) => res));\n  }\n\n  removeFromWishList(userId, productId) {\n    return this.http\n      .put('/wishlist' + `/${userId}`, productId)\n      .pipe(map((res) => res));\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}