{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/checkout/checkout-item/checkout-item.component.ts","./src/app/components/checkout/checkout-item/checkout-item.component.html","./src/app/components/checkout/checkout.component.ts","./src/app/components/checkout/checkout.component.html","./src/app/components/employees/employees.component.ts","./src/app/components/employees/employees.component.html","./src/app/components/footer/footer.component.ts","./src/app/components/footer/footer.component.html","./src/app/components/games/games.component.ts","./src/app/components/games/games.component.html","./src/app/components/gestionProductos/gestion-products.component.ts","./src/app/components/gestionProductos/gestion-products.component.html","./src/app/components/home/cart/cart-item/cart-item.component.ts","./src/app/components/home/cart/cart-item/cart-item.component.html","./src/app/components/home/cart/cart.component.ts","./src/app/components/home/cart/cart.component.html","./src/app/components/home/filter/filter.component.ts","./src/app/components/home/filter/filter.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/home/product-list/product-item/product-item.component.ts","./src/app/components/home/product-list/product-item/product-item.component.html","./src/app/components/home/product-list/product-list.component.ts","./src/app/components/home/product-list/product-list.component.html","./src/app/components/preview-products/preview-products.component.ts","./src/app/components/preview-products/preview-products.component.html","./src/app/components/private-games/private-games.component.ts","./src/app/components/private-games/private-games.component.html","./src/app/components/profile/profile.component.ts","./src/app/components/profile/profile.component.html","./src/app/components/public/page404/page404.component.ts","./src/app/components/public/page404/page404.component.html","./src/app/components/signin/signin.component.ts","./src/app/components/signin/signin.component.html","./src/app/components/signup/signup.component.ts","./src/app/components/signup/signup.component.html","./src/app/components/users/users.component.ts","./src/app/components/users/users.component.html","./src/app/guards/auth-back-to-login.guard.ts","./src/app/guards/auth-role-admin.guard.ts","./src/app/guards/auth-role-employee.guard.ts","./src/app/guards/auth.guard.ts","./src/app/models/cart-item.ts","./src/app/models/employee.ts","./src/app/models/products.ts","./src/app/models/users.ts","./src/app/pipes/filter.pipe.ts","./src/app/services/auth.service.ts","./src/app/services/employee.service.ts","./src/app/services/filter.service.ts","./src/app/services/messenger.service.ts","./src/app/services/products.service.ts","./src/app/services/roles.service.ts","./src/app/services/shopcart.service.ts","./src/app/services/token-interceptor.service.ts","./src/app/services/users.service.ts","./src/app/services/wishlist.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n//COMPONENTES//\nimport { EmployeesComponent } from './components/employees/employees.component';\nimport { GamesComponent } from './components/games/games.component';\nimport { SigninComponent } from './components/signin/signin.component';\nimport { SignupComponent } from './components/signup/signup.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { PrivateGamesComponent } from './components/private-games/private-games.component';\nimport { UsersComponent } from './components/users/users.component';\nimport { AuthRoleAdminGuard } from './guards/auth-role-admin.guard';\nimport { AuthGuard } from './guards/auth.guard';\nimport { AuthBackToLoginGuard } from './guards/auth-back-to-login.guard';\nimport { GestionProductsComponent } from './components/gestionProductos/gestion-products.component';\nimport { PreviewProductsComponent } from './components/preview-products/preview-products.component';\nimport { AuthRoleEmployeeGuard } from './guards/auth-role-employee.guard';\nimport { Page404Component } from './components/public/page404/page404.component';\nimport { CheckoutComponent } from './components/checkout/checkout.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: '/home',\n    pathMatch: 'full',\n  },\n  {\n    path: 'employees',\n    component: EmployeesComponent,\n    canActivate: [AuthGuard, AuthRoleAdminGuard],\n  },\n  {\n    path: 'gestionProducts',\n    component: GestionProductsComponent,\n    canActivate: [AuthGuard, AuthRoleEmployeeGuard],\n  },\n  {\n    path: 'games',\n    component: GamesComponent,\n  },\n  {\n    path: 'preview-products/:id',\n    component: PreviewProductsComponent,\n  },\n  {\n    path: 'signin',\n    component: SigninComponent,\n    canActivate: [AuthBackToLoginGuard],\n  },\n  {\n    path: 'signup',\n    component: SignupComponent,\n    canActivate: [AuthBackToLoginGuard],\n  },\n  {\n    path: 'profile/:id',\n    component: ProfileComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'home',\n    component: HomeComponent,\n  },\n  {\n    path: 'private-games',\n    component: PrivateGamesComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'usuarios',\n    component: UsersComponent,\n    canActivate: [AuthGuard, AuthRoleEmployeeGuard],\n  },\n  {\n    path: 'checkout/:id',\n    component: CheckoutComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: '**', //Si no encuentra una pagina, muestra la 404\n    component: Page404Component,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, Output, EventEmitter } from '@angular/core';\nimport { AuthService } from './services/auth.service';\nimport { Subject } from 'rxjs';\nimport { FormControl } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\nimport { FilterService } from './services/filter.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  public static updateUserStatus: Subject<boolean> = new Subject();\n  user: any;\n  constructor(\n    public authService: AuthService,\n    public filterService: FilterService,\n    private router: Router\n  ) {\n    AppComponent.updateUserStatus.subscribe((res) => {\n      this.traerDatos();\n    });\n  }\n  filtroValor = '';\n  ngOnInit() {\n    this.traerDatos();\n    this.filter.valueChanges.pipe(debounceTime(300)).subscribe((value) => {\n      this.filtroValor = value;\n      this.filterEmitter.emit(value);\n      this.filterService.tomarDatos(this.filtroValor);\n      this.router\n        .navigateByUrl('/RefreshComponent', {\n          skipLocationChange: true,\n        })\n        .then(() => {\n          this.router.navigate(['/home']);\n        });\n    });\n  }\n\n  selectCart(id: String) {\n    this.router.navigate(['/checkout', id]);\n  }\n\n  goToProfile(id: String) {\n    this.router.navigate(['/profile', id]);\n  }\n\n  traerDatos() {\n    //CREO UNA FUNCION QUE ME VA GUARDAR LOS DATOS DEL USUARIO DECODIFICANDO EL TOKEN\n    if (this.authService.loggedIn()) {\n      //SOLO DECODIFICA EL TOKEN SI ESTA LOGEADO\n      this.user = {\n        id: this.authService.decodeToken().id,\n        email: this.authService.decodeToken().email,\n        nombre_usuario: this.authService.decodeToken().nombre_usuario,\n        rol: this.authService.decodeToken().rol,\n      };\n    }\n  }\n  filter = new FormControl('');\n\n  @Output('filter') filterEmitter = new EventEmitter<String>();\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" routerLink=\"/home\" routerLinkActive=\"active\">\n      <img\n        src=\"../assets/imgs/favicon.png\"\n        width=\"30\"\n        height=\"30\"\n        class=\"d-inline-block align-top\"\n        alt=\"\"\n      />\n      GeekyShop\n    </a>\n    <button\n      class=\"navbar-toggler\"\n      type=\"button\"\n      data-toggle=\"collapse\"\n      data-target=\"#navbarNav\"\n      aria-controls=\"navbarNav\"\n      aria-expanded=\"false\"\n      aria-label=\"Toggle navigation\"\n    >\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n      <ul class=\"navbar-nav\">\n        <li class=\"nav-item\">\n          <form class=\"form-inline my-2 my-lg-0\">\n            <input\n              class=\"form-control mr-sm-2 nav-link\"\n              type=\"search\"\n              placeholder=\"Buscar\"\n              aria-label=\"Buscar\"\n              name=\"filterPost\"\n              [formControl]=\"filter\"\n            />\n          </form>\n        </li>\n        <li\n          class=\"nav-item dropdown\"\n          *ngIf=\"authService.loggedIn() && authService.isEmployee()\"\n        >\n          <a\n            class=\"nav-link dropdown-toggle nav-link\"\n            data-toggle=\"dropdown\"\n            role=\"button\"\n            aria-haspopup=\"true\"\n            aria-expanded=\"false\"\n            >Herramientas</a\n          >\n          <div class=\"dropdown-menu\">\n            <ng-container *ngIf=\"authService.loggedIn()\">\n              <li class=\"nav-item\">\n                <div *ngIf=\"authService.isEmployee()\">\n                  <a\n                    class=\"nav-link dropdown-item\"\n                    routerLink=\"/private-games\"\n                    routerLinkActive=\"active\"\n                    >Juegos no publicados</a\n                  >\n                </div>\n              </li>\n              <li class=\"nav-item\">\n                <div *ngIf=\"authService.isEmployee()\">\n                  <a\n                    class=\"nav-link dropdown-item\"\n                    routerLink=\"/gestionProducts\"\n                    routerLinkActive=\"active\"\n                    >Gestion de productos</a\n                  >\n                </div>\n              </li>\n              <li class=\"nav-item\">\n                <div *ngIf=\"authService.isAdmin()\">\n                  <a\n                    class=\"nav-link dropdown-item\"\n                    routerLink=\"/employees\"\n                    routerLinkActive=\"active\"\n                    >Empleados</a\n                  >\n                </div>\n              </li>\n              <li class=\"nav-item\">\n                <div *ngIf=\"authService.isEmployee()\">\n                  <a\n                    class=\"nav-link dropdown-item\"\n                    routerLink=\"/usuarios\"\n                    routerLinkActive=\"active\"\n                    >Usuarios</a\n                  >\n                </div>\n              </li>\n            </ng-container>\n          </div>\n        </li>\n      </ul>\n      <ul class=\"navbar-nav ml-auto\">\n        <li class=\"nav-item\" *ngIf=\"authService.loggedIn()\">\n          <a\n            class=\"navbar-brand\"\n            (click)=\"selectCart(user.id)\"\n            routerLinkActive=\"active\"\n          >\n            <img\n              src=\"../assets/imgs/shopcart.svg\"\n              width=\"30\"\n              height=\"30\"\n              alt=\"\"\n              loading=\"lazy\"\n            />\n          </a>\n        </li>\n        <ng-container *ngIf=\"!authService.loggedIn(); else loggedIn\">\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/signin\" routerLinkActive=\"active\"\n              >Iniciar Sesion</a\n            >\n          </li>\n        </ng-container>\n        <ng-template #loggedIn>\n          <li class=\"nav-item\">\n            <a\n              class=\"nav-link\"\n              (click)=\"goToProfile(user.id)\"\n              routerLinkActive=\"active\"\n              >{{ user.nombre_usuario }}</a\n            >\n          </li>\n          <li class=\"nav-item\" *ngIf=\"authService.isEmployee()\">\n            <a class=\"nav-link\">Rol: {{ user.rol }}</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" (click)=\"authService.logOut()\">Cerrar Sesion</a>\n          </li>\n        </ng-template>\n      </ul>\n    </div>\n  </div>\n</nav>\n<div class=\"container p-5\">\n  <router-outlet></router-outlet>\n</div>\n<app-footer></app-footer>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { EmployeesComponent } from './components/employees/employees.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { SignupComponent } from './components/signup/signup.component';\nimport { SigninComponent } from './components/signin/signin.component';\nimport { GamesComponent } from './components/games/games.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { PrivateGamesComponent } from './components/private-games/private-games.component';\nimport { UsersComponent } from './components/users/users.component';\nimport { AuthGuard } from './guards/auth.guard';\nimport { AuthBackToLoginGuard } from './guards/auth-back-to-login.guard';\nimport { AuthRoleAdminGuard } from './guards/auth-role-admin.guard';\nimport { TokenInterceptorService } from './services/token-interceptor.service';\nimport { GestionProductsComponent } from './components/gestionProductos/gestion-products.component';\nimport { PreviewProductsComponent } from './components/preview-products/preview-products.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { CartComponent } from './components/home/cart/cart.component';\nimport { FilterComponent } from './components/home/filter/filter.component';\nimport { CartItemComponent } from './components/home/cart/cart-item/cart-item.component';\nimport { ProductListComponent } from './components/home/product-list/product-list.component';\nimport { ProductItemComponent } from './components/home/product-list/product-item/product-item.component';\nimport { Page404Component } from './components/public/page404/page404.component';\nimport { CheckoutComponent } from './components/checkout/checkout.component';\nimport { CheckoutItemComponent } from './components/checkout/checkout-item/checkout-item.component';\nimport { FilterPipe } from './pipes/filter.pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EmployeesComponent,\n    SignupComponent,\n    SigninComponent,\n    GamesComponent,\n    ProfileComponent,\n    HomeComponent,\n    PrivateGamesComponent,\n    UsersComponent,\n    GestionProductsComponent,\n    PreviewProductsComponent,\n    FooterComponent,\n    CartComponent,\n    FilterComponent,\n    CartItemComponent,\n    ProductListComponent,\n    ProductItemComponent,\n    Page404Component,\n    CheckoutComponent,\n    CheckoutItemComponent,\n    FilterPipe,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n  ],\n  providers: [\n    AuthGuard,\n    AuthRoleAdminGuard,\n    AuthBackToLoginGuard,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptorService,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Product } from 'src/app/models/products';\n\n@Component({\n  selector: 'app-checkout-item',\n  templateUrl: './checkout-item.component.html',\n  styleUrls: ['./checkout-item.component.css'],\n})\nexport class CheckoutItemComponent implements OnInit {\n  @Input() product: Product;\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"row\" *ngIf=\"!product; else mainContent\">\n  <h1>Loading...</h1>\n</div>\n\n<ng-template #mainContent>\n  <div class=\"row\">\n    <div class=\"container\">\n      <div class=\"card\">\n        <div class=\"card-photo\">\n          <img\n            [src]=\"'http://localhost:3000/public/' + product.imageName\"\n            class=\"img-card-top\"\n            height=\"100px\"\n            width=\"70px\"\n          />\n        </div>\n        <div class=\"card-body\">\n          <p class=\"card-text\">\n            <strong>{{ product.name }}</strong>\n            <br />\n            {{ product.description | slice: 0:50 }}...\n            <br />\n            Precio: <strong> {{ product.price | currency: \"USD\" }} </strong>\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n</ng-template>\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { ShopcartService } from 'src/app/services/shopcart.service';\nimport { ActivatedRoute } from '@angular/router';\nimport Swal from 'sweetalert2';\ndeclare var paypal;\n@Component({\n  selector: 'app-checkout',\n  templateUrl: './checkout.component.html',\n  styleUrls: ['./checkout.component.css'],\n})\nexport class CheckoutComponent implements OnInit {\n  @ViewChild('paypal', { static: true }) paypalElement: ElementRef;\n  idCart: String;\n  cartTotal = 0;\n  products: any;\n  constructor(public shopCart: ShopcartService) {}\n\n  ngOnInit(): void {\n    this.loadProductsInCart();\n    paypal\n      .Buttons({\n        createOrder: (data, actions) => {\n          return actions.order.create({\n            purchase_units: [\n              {\n                description: `Pago`,\n                amount: {\n                  currency_code: 'USD',\n                  value: this.cartTotal,\n                },\n              },\n            ],\n          });\n        },\n        onApprove: async (data, actions) => {\n          const order = await actions.order.capture();\n          Swal.fire({\n            title: 'Hola, agradecemos por tu compra',\n            text: 'Se te hara entrega de tu producto a tu correo registrado',\n            imageUrl: '../../../../../assets/imgs/buy.svg',\n            imageWidth: 400,\n            imageHeight: 200,\n            imageAlt: 'Custom image',\n            confirmButtonColor: '#6c5ce7',\n          });\n        },\n        onError: (err) => {\n          Swal.fire({\n            title: 'Hola, lo sentimos',\n            text:\n              'Hubo un error con tu metodo de pago, comunicate con tu banco o intenta de nuevo',\n            imageUrl: '../../../../../assets/imgs/stress.svg',\n            imageWidth: 400,\n            imageHeight: 200,\n            imageAlt: 'Custom image',\n            confirmButtonColor: '#6c5ce7',\n          });\n        },\n      })\n      .render(this.paypalElement.nativeElement);\n  }\n\n  loadProductsInCart() {\n    this.shopCart.getCartItems(this.shopCart.getUserId()).subscribe(\n      (res) => {\n        this.products = res;\n        this.calculeCartTotal();\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n  }\n\n  calculeCartTotal() {\n    this.cartTotal = 0;\n    this.products.forEach((product) => {\n      this.cartTotal += product.price;\n    });\n  }\n}\n","<div class=\"row\">\n  <div class=\"container col-6\">\n    <div class=\"card\">\n      <div class=\"card-header\">Check out</div>\n    </div>\n    <div class=\"card-body\" *ngFor=\"let product of products\">\n      <app-checkout-item [product]=\"product\"></app-checkout-item>\n    </div>\n  </div>\n  <div class=\"container col-6\">\n    <div class=\"card-text total\">\n      <h1>\n        Total\n      </h1>\n      <div class=\"totalNum\">\n        {{ cartTotal | currency: \"USD\" }}\n      </div>\n    </div>\n    <div #paypal></div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport { EmployeeService } from '../../services/employee.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Employee } from 'src/app/models/employee';\n\nimport Swal from 'sweetalert2';\nimport { on } from 'process';\n\n@Component({\n  selector: 'app-employees',\n  templateUrl: './employees.component.html',\n  styleUrls: ['./employees.component.css'],\n  providers: [EmployeeService],\n})\nexport class EmployeesComponent implements OnInit {\n  id: String;\n  employee = { name: '', position: '', officine: '', salary: 0 };\n  onEditEmployee: boolean;\n  createEmployeeForm: FormGroup;\n  salaryPattern = /[0-9]/;\n  constructor(public employeeService: EmployeeService, public fb: FormBuilder) {\n    this.createEmployeeForm = this.fb.group({\n      name: ['', [Validators.required]],\n      position: ['', [Validators.required]],\n      officine: ['', [Validators.required]],\n      salary: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(2),\n          Validators.maxLength(7),\n          Validators.pattern(this.salaryPattern),\n        ],\n      ],\n    });\n  }\n\n  ngOnInit() {\n    this.getEmployees();\n    this.onEditEmployee = false;\n  }\n\n  resetForm(form?: FormGroup) {\n    if (form) {\n      form.reset();\n      this.employeeService.selectedEmployee = new Employee();\n    }\n  }\n\n  onSalaryIntroduced(event: KeyboardEvent) {\n    const inputChar = String.fromCharCode(event.charCode);\n    if (!this.salaryPattern.test(inputChar)) {\n      // invalid character, prevent input\n      event.preventDefault();\n    }\n  }\n\n  addEmployee() {\n    if (this.onEditEmployee == false) {\n      this.employeeService\n        .postEmployee(this.createEmployeeForm.value)\n        .subscribe(\n          (res) => {\n            this.resetForm(this.createEmployeeForm);\n            this.getEmployees();\n            Swal.fire({\n              title: 'Registro exitoso',\n              text: 'Empleado registrado exitosamente',\n              icon: 'success',\n              confirmButtonColor: '#6c5ce7',\n            });\n          },\n          (err) => {\n            console.log(err);\n            Swal.fire({\n              icon: 'error',\n              title: 'Oops...',\n              text: 'No se pudo guardar el registro',\n            });\n          }\n        );\n    } else if (this.onEditEmployee == true) {\n      this.employeeService\n        .putEmployee(this.id, this.createEmployeeForm.value)\n        .subscribe(\n          (res) => {\n            this.resetForm(this.createEmployeeForm);\n            this.getEmployees();\n            Swal.fire({\n              title: 'Actualizacion exitosa!',\n              text: 'Empleado actualizado correctamente',\n              icon: 'success',\n              confirmButtonColor: '#6c5ce7',\n            });\n          },\n          (err) => {\n            console.log(err);\n          }\n        );\n    }\n  }\n\n  getEmployees() {\n    this.employeeService.getEmployees().subscribe((res) => {\n      this.employeeService.employees = res as Employee[];\n    });\n  }\n\n  editEmployee(employee) {\n    this.id = employee._id;\n    this.employeeService.selectedEmployee = employee;\n    this.createEmployeeForm.controls['name'].setValue(employee.name);\n    this.createEmployeeForm.controls['officine'].setValue(employee.officine);\n    this.createEmployeeForm.controls['position'].setValue(employee.position);\n    this.createEmployeeForm.controls['salary'].setValue(employee.salary);\n    this.onEditEmployee = true;\n  }\n  deleteEmployee(_id: string) {\n    Swal.fire({\n      title: '¿Estas seguro de querer eliminar este registro?',\n      text: 'No podras revertir esto!',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#6c5ce7',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Si, Borralo',\n    }).then((result) => {\n      if (result.value) {\n        Swal.fire({\n          title: 'Eliminado',\n          text: 'Tu registro se ha eliminado con exito.',\n          icon: 'success',\n          confirmButtonColor: '#6c5ce7',\n        });\n        this.employeeService.deleteEmployee(_id).subscribe((res) => {\n          this.getEmployees();\n        });\n      } else {\n        Swal.fire({\n          icon: 'error',\n          title: 'Algo salio mal',\n          text: 'No pudimos eliminar tu registro',\n          confirmButtonColor: '#6c5ce7',\n        });\n      }\n    });\n  }\n}\n","<div class=\"row\">\n  <div class=\"container col-5\">\n    <div class=\"card\">\n      <div class=\"card-header\">\n        Gestion de empleados\n      </div>\n      <div class=\"card-body\">\n        <form [formGroup]=\"createEmployeeForm\" (ngSubmit)=\"addEmployee()\">\n          <div class=\"form-group\">\n            <div class=\"form-group\">\n              <label for=\"nombre\">Nombre del empleado</label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                name=\"name\"\n                formControlName=\"name\"\n                [value]=\"employeeService.selectedEmployee.name\"\n                [ngClass]=\"{\n                  'is-invalid':\n                    createEmployeeForm.get('name').errors &&\n                    createEmployeeForm.get('name').dirty\n                }\"\n                placeholder=\"Enter your name\"\n                required\n              />\n            </div>\n            <div\n              *ngIf=\"\n                createEmployeeForm.get('name').errors &&\n                createEmployeeForm.get('name').dirty\n              \"\n            >\n              <p\n                *ngIf=\"createEmployeeForm.get('name').hasError('required')\"\n                class=\"invalid-p\"\n              >\n                Campo requerido\n              </p>\n            </div>\n            <div class=\"form-group\">\n              <label for=\"puesto\">Puesto del empleado</label>\n              <input\n                type=\"text\"\n                name=\"position\"\n                class=\"form-control\"\n                formControlName=\"position\"\n                [ngClass]=\"{\n                  'is-invalid':\n                    createEmployeeForm.get('position').errors &&\n                    createEmployeeForm.get('position').dirty\n                }\"\n                [value]=\"employeeService.selectedEmployee.position\"\n                placeholder=\"Enter your position\"\n                required\n              />\n            </div>\n            <div\n              *ngIf=\"\n                createEmployeeForm.get('position').errors &&\n                createEmployeeForm.get('position').dirty\n              \"\n            >\n              <p\n                *ngIf=\"createEmployeeForm.get('position').hasError('required')\"\n                class=\"invalid-p\"\n              >\n                Campo requerido\n              </p>\n            </div>\n            <div class=\"form-group\">\n              <label for=\"oficina\">Oficina del empleado</label>\n              <input\n                type=\"text\"\n                name=\"officine\"\n                class=\"form-control\"\n                formControlName=\"officine\"\n                [value]=\"employeeService.selectedEmployee.officine\"\n                [ngClass]=\"{\n                  'is-invalid':\n                    createEmployeeForm.get('officine').errors &&\n                    createEmployeeForm.get('officine').dirty\n                }\"\n                placeholder=\"Enter your officine\"\n                required\n              />\n            </div>\n            <div\n              *ngIf=\"\n                createEmployeeForm.get('officine').errors &&\n                createEmployeeForm.get('officine').dirty\n              \"\n            >\n              <p\n                *ngIf=\"createEmployeeForm.get('officine').hasError('required')\"\n                class=\"invalid-p\"\n              >\n                Campo requerido\n              </p>\n            </div>\n            <div class=\"form-group\">\n              <label for=\"puesto\">Salario del empleado</label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                placeholder=\"Enter your salary\"\n                [value]=\"employeeService.selectedEmployee.salary\"\n                minlength=\"2\"\n                maxlength=\"7\"\n                formControlName=\"salary\"\n                [pattern]=\"salaryPattern\"\n                (keypress)=\"onSalaryIntroduced($event)\"\n                [ngClass]=\"{\n                  'is-invalid':\n                    createEmployeeForm.get('salary').errors &&\n                    createEmployeeForm.get('salary').dirty\n                }\"\n                required\n              />\n            </div>\n            <div\n              *ngIf=\"\n                createEmployeeForm.get('salary').errors &&\n                createEmployeeForm.get('salary').dirty\n              \"\n            >\n              <p\n                *ngIf=\"createEmployeeForm.get('salary').hasError('pattern')\"\n                class=\"invalid-p\"\n              >\n                Ingrese un precio correcto: 4000, 44, 44.44\n              </p>\n              <p\n                *ngIf=\"createEmployeeForm.get('salary').hasError('required')\"\n                class=\"invalid-p\"\n              >\n                Campo requerido\n              </p>\n              <p\n                *ngIf=\"createEmployeeForm.get('salary').hasError('minlength')\"\n                class=\"invalid-p\"\n              >\n                El minimo de caracteres es de 2\n              </p>\n              <p\n                *ngIf=\"createEmployeeForm.get('salary').errors?.maxlength\"\n                class=\"invalid-p\"\n              >\n                El maximo de caracteres es de 7\n              </p>\n            </div>\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary\"\n              style=\"margin-left: 2px;\"\n              [disabled]=\"createEmployeeForm.invalid\"\n            >\n              Guardar\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-primary\"\n              (click)=\"resetForm(createEmployeeForm)\"\n            >\n              Limpiar\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n  <div class=\"container table-employee col-6\">\n    <table class=\"table table-bordered\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Position</th>\n          <th>Officine</th>\n          <th>Operations</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let employee of employeeService.employees\">\n          <td>{{ employee.name }}</td>\n          <td>{{ employee.position }}</td>\n          <td>{{ employee.officine }}</td>\n          <td class=\"icons\">\n            <a (click)=\"editEmployee(employee)\">\n              <i class=\"material-icons\">edit</i>\n            </a>\n            <a (click)=\"deleteEmployee(employee._id)\">\n              <i class=\"material-icons\" style=\"margin-left: 40px;\">delete</i>\n            </a>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer class=\"page-footer font-small blue pt-4\">\r\n  <div class=\"container-fluid text-center text-md-left\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6 mt-md-0 mt-3\">\r\n        <h5 class=\"text-uppercase\">Geeky Shop</h5>\r\n        <img\r\n          src=\"../../../assets/imgs/online-shopping.svg\"\r\n          width=\"120px\"\r\n          height=\"120px\"\r\n        />\r\n      </div>\r\n      <hr class=\"clearfix w-100 d-md-none pb-3\" />\r\n      <div class=\"col-md-3 mb-md-0 mb-3\">\r\n        <h5 class=\"text-uppercase\">Redes Sociales</h5>\r\n        <ul class=\"list-unstyled\">\r\n          <li>\r\n            <a href=\"#!\">Facebook</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#!\">LinkdIn</a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"footer-copyright text-center py-3\">\r\n    © 2020 Copyright:\r\n    <a href=\"https://mdbootstrap.com/\"> BMSoftware</a>\r\n  </div>\r\n</footer>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-games',\n  templateUrl: './games.component.html',\n  styleUrls: ['./games.component.css']\n})\nexport class GamesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  games works!\n</p>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ProductsService } from 'src/app/services/products.service';\nimport Swal from 'sweetalert2';\ninterface HtmlInputEvent extends Event {\n  target: HTMLInputElement & EventTarget;\n}\n\n@Component({\n  selector: 'app-gestion-products',\n  templateUrl: './gestion-products.component.html',\n  styleUrls: ['./gestion-products.component.css'],\n  providers: [ProductsService],\n})\nexport class GestionProductsComponent implements OnInit {\n  product = { name: '', description: '', price: 0 };\n  file: File;\n  createProductForm: FormGroup;\n  photoSelected: string | ArrayBuffer;\n  pricePattern = /[0-9]/;\n\n  constructor(\n    private router: Router,\n    public productService: ProductsService,\n    public fb: FormBuilder\n  ) {\n    this.createProductForm = this.fb.group({\n      name: ['', [Validators.required]],\n      description: ['', [Validators.required, Validators.maxLength(140)]],\n      price: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(2),\n          Validators.maxLength(7),\n          Validators.pattern(this.pricePattern),\n        ],\n      ],\n      inputImage: ['', [Validators.required]],\n    });\n  }\n\n  ngOnInit(): void {}\n  resetForm(form?: FormGroup) {\n    if (form) {\n      form.reset();\n    }\n  }\n  //VALIDA SI LO QUE ESTOY INGRESANDO SON NUMEROS O LETRAS\n  onPriceIntroduced(event: KeyboardEvent) {\n    const inputChar = String.fromCharCode(event.charCode);\n    if (!this.pricePattern.test(inputChar)) {\n      // invalid character, prevent input\n      event.preventDefault();\n    }\n  }\n  onPhotoSelected(event: HtmlInputEvent): void {\n    if (event.target.files && event.target.files[0]) {\n      this.file = <File>event.target.files[0];\n      //Image Preview\n      const reader = new FileReader();\n      reader.onload = (e) => (this.photoSelected = reader.result);\n      reader.readAsDataURL(this.file);\n    }\n  }\n\n  createProduct() {\n    this.productService\n      .createProduct(this.createProductForm.value, this.file)\n      .subscribe(\n        (res) => {\n          this.resetForm(this.createProductForm);\n          Swal.fire({\n            title: 'Registro exitoso!',\n            text: 'Juego agregado correctamente',\n            icon: 'success',\n            confirmButtonColor: '#6c5ce7',\n          });\n          this.router.navigate(['/home']);\n        },\n        (err) => {\n          Swal.fire({\n            icon: 'error',\n            title: 'Algo salio mal',\n            text: 'No pudimos agregar el juego',\n            confirmButtonColor: '#6c5ce7',\n          });\n        }\n      );\n  }\n}\n","<div class=\"row\">\n  <div class=\"container col-5\">\n    <div class=\"card\">\n      <div class=\"card-header\">Gestion de productos</div>\n      <div class=\"card-body\">\n        <form\n          class=\"container\"\n          [formGroup]=\"createProductForm\"\n          (ngSubmit)=\"createProduct()\"\n        >\n          <div class=\"form-group\">\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              formControlName=\"name\"\n              placeholder=\"Juego\"\n              [ngClass]=\"{\n                'is-invalid':\n                  createProductForm.get('name').errors &&\n                  createProductForm.get('name').dirty\n              }\"\n              required\n              autofocus\n              name=\"name\"\n            />\n          </div>\n          <div\n            *ngIf=\"\n              createProductForm.get('name').errors &&\n              createProductForm.get('name').dirty\n            \"\n          >\n            <p *ngIf=\"createProductForm.get('name').hasError('required')\">\n              Campo requerido\n            </p>\n          </div>\n          <div class=\"form-group\">\n            <textarea\n              class=\"form-control\"\n              formControlName=\"description\"\n              placeholder=\"Ingrese la descripcion del juego\"\n              rows=\"3\"\n              required\n              [ngClass]=\"{\n                'is-invalid':\n                  createProductForm.get('description').errors &&\n                  createProductForm.get('description').dirty\n              }\"\n              maxlength=\"140\"\n              name=\"description\"\n            ></textarea>\n          </div>\n          <div\n            *ngIf=\"\n              createProductForm.get('description').errors &&\n              createProductForm.get('description').dirty\n            \"\n          >\n            <p\n              *ngIf=\"createProductForm.get('description').hasError('required')\"\n            >\n              Campo requerido\n            </p>\n            <p\n              *ngIf=\"createProductForm.get('description').hasError('maxlength')\"\n            >\n              El maximo de caracteres es de 140\n            </p>\n          </div>\n          <div class=\"form-group\">\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              placeholder=\"Precio del juego: 4000, 50000\"\n              [value]=\"product.price\"\n              minlength=\"2\"\n              maxlength=\"7\"\n              [ngClass]=\"{\n                'is-invalid':\n                  createProductForm.get('price').errors &&\n                  createProductForm.get('price').dirty\n              }\"\n              formControlName=\"price\"\n              [pattern]=\"pricePattern\"\n              (keypress)=\"onPriceIntroduced($event)\"\n            />\n          </div>\n          <div\n            *ngIf=\"\n              createProductForm.get('price').errors &&\n              createProductForm.get('price').dirty\n            \"\n          >\n            <p *ngIf=\"createProductForm.get('price').hasError('pattern')\">\n              Ingrese un precio correcto: 4000, 44, 44.44\n            </p>\n            <p *ngIf=\"createProductForm.get('price').hasError('required')\">\n              Campo requerido\n            </p>\n            <p *ngIf=\"createProductForm.get('price').hasError('minlength')\">\n              El minimo de caracteres es de 2\n            </p>\n            <p *ngIf=\"createProductForm.get('price').hasError('maxlength')\">\n              El maximo de caracteres es de 7\n            </p>\n          </div>\n          <div class=\"form-group inputFile\">\n            <input\n              type=\"file\"\n              class=\"form-control-file d-none position-static\"\n              id=\"uploadImage\"\n              name=\"image\"\n              formControlName=\"inputImage\"\n              (change)=\"onPhotoSelected($event)\"\n              enctype=\"multipart/form-data\"\n              #photoInput\n            />\n            <img\n              [src]=\"photoSelected || '../../../assets/imgs/uploadPic.svg'\"\n              class=\"img-fluid position-static\"\n              alt=\"No Image\"\n              (click)=\"photoInput.click()\"\n            />\n            <label for=\"uploadImage\" class=\"inputFile\">Subir Foto</label>\n          </div>\n          <div\n            *ngIf=\"\n              createProductForm.get('inputImage').errors &&\n              createProductForm.get('inputImage').dirty\n            \"\n          >\n            <p\n              *ngIf=\"createProductForm.get('inputImage').hasError('inputImage')\"\n            >\n              Campo requerido\n            </p>\n          </div>\n          <button\n            type=\"submit\"\n            class=\"btn btn-primary btn-block\"\n            [disabled]=\"createProductForm.invalid\"\n          >\n            Guardar\n          </button>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ShopcartService } from 'src/app/services/shopcart.service';\nimport { Router } from '@angular/router';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-cart-item',\n  templateUrl: './cart-item.component.html',\n  styleUrls: ['./cart-item.component.css'],\n})\nexport class CartItemComponent implements OnInit {\n  mySubscription: any;\n  @Input() cartItem: any;\n  constructor(public shopCart: ShopcartService, private router: Router) {}\n\n  ngOnInit(): void {}\n  deleteProductOfCart(product) {\n    this.shopCart\n      .deleteProductFromCar(product, this.shopCart.getUserId())\n      .subscribe(\n        (res) => {\n          Swal.fire({\n            title: 'El producto se ha eliminado de tu carrito',\n            imageUrl: '../../../../../assets/imgs/buy.svg',\n            imageWidth: 400,\n            imageHeight: 200,\n            imageAlt: 'Custom image',\n            confirmButtonColor: '#6c5ce7',\n          }).then((result) => {\n            if (result.value) {\n              this.router\n                .navigateByUrl('/RefreshComponent', {\n                  skipLocationChange: true,\n                })\n                .then(() => {\n                  this.router.navigate(['/home']);\n                });\n            }\n          });\n        },\n        (err) => {\n          Swal.fire({\n            title: 'Hola, lo sentimos',\n            text:\n              'Hubo un error tratando de eliminar el producto, vuelve a intentar',\n            imageUrl: '../../../../../assets/imgs/stress.svg',\n            imageWidth: 400,\n            imageHeight: 200,\n            imageAlt: 'Custom image',\n            confirmButtonColor: '#6c5ce7',\n          });\n        }\n      );\n  }\n}\n","<div class=\"cart-text\">\n  <span>{{ cartItem.name }}</span>\n  <div class=\"iconDelete\">\n    <a (click)=\"deleteProductOfCart(cartItem)\">\n      <i class=\"material-icons\">delete</i>\n    </a>\n  </div>\n</div>\n<strong> {{ cartItem.price | currency: \"USD\" }} </strong>\n","import { Component, OnInit } from '@angular/core';\nimport { MessengerService } from '../../../services/messenger.service';\nimport { Product } from 'src/app/models/products';\nimport Swal from 'sweetalert2';\nimport { ShopcartService } from 'src/app/services/shopcart.service';\nimport { CartItem } from 'src/app/models/cart-item';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css'],\n})\nexport class CartComponent implements OnInit {\n  cartItems = [];\n  cartUser: any;\n  cartTotal = 0;\n  constructor(\n    private message: MessengerService,\n    private cartService: ShopcartService,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.handleSubscription();\n    this.loadCartItems();\n    this.loadCartUser();\n  }\n\n  handleSubscription() {\n    this.message.getMessage().subscribe((product: Product) => {\n      this.loadCartItems();\n    });\n  }\n\n  loadCartUser() {\n    if (this.cartItems.length > 0) {\n      this.cartService\n        .getCartUser(this.cartService.getUserId())\n        .subscribe((res) => {\n          this.cartUser = res[0]._id;\n          this.router.navigate(['/checkout', this.cartUser]);\n        });\n    }\n  }\n  cleanCart() {\n    this.cartService.cleanCart(this.cartService.getUserId()).subscribe(\n      (res) => {\n        Swal.fire({\n          title: 'Tu carrito se ha vaciado',\n          imageUrl: '../../../../../assets/imgs/buy.svg',\n          imageWidth: 400,\n          imageHeight: 200,\n          imageAlt: 'Custom image',\n          confirmButtonColor: '#6c5ce7',\n        }).then((result) => {\n          if (result.value) {\n            this.router\n              .navigateByUrl('/RefreshComponent', {\n                skipLocationChange: true,\n              })\n              .then(() => {\n                this.router.navigate(['/home']);\n              });\n          }\n        });\n      },\n      (err) => {\n        Swal.fire({\n          title: 'Hola, lo sentimos',\n          text:\n            'Hubo un error tratando de limpiar tu carrito, vuelve a intentar',\n          imageUrl: '../../../../../assets/imgs/stress.svg',\n          imageWidth: 400,\n          imageHeight: 200,\n          imageAlt: 'Custom image',\n          confirmButtonColor: '#6c5ce7',\n        });\n      }\n    );\n  }\n\n  loadCartItems() {\n    this.cartService\n      .getCartItems(this.cartService.getUserId())\n      .subscribe((res) => {\n        this.cartItems = res;\n        this.calculeCartTotal();\n      });\n  }\n\n  calculeCartTotal() {\n    this.cartTotal = 0;\n    this.cartItems.forEach((product) => {\n      this.cartTotal += product.price;\n    });\n  }\n}\n","<div class=\"alert alert-info\" *ngIf=\"cartItems.length === 0\">\n  Tu carrito esta vacio.\n</div>\n<ul *ngIf=\"cartItems.length > 0\" class=\"list-group\">\n  <li class=\"list-group-item\" *ngFor=\"let item of cartItems\">\n    <app-cart-item [cartItem]=\"item\"></app-cart-item>\n  </li>\n  <li class=\"list-group-item total\">\n    Total: <strong>{{ cartTotal | currency: \"USD\" }}</strong>\n  </li>\n  <li class=\"list-group-item pagar\">\n    <button\n      type=\"button\"\n      class=\"btn btn-primary btn-block\"\n      (click)=\"cleanCart()\"\n    >\n      Vaciar\n    </button>\n    <button\n      type=\"button\"\n      class=\"btn btn-primary btn-block\"\n      (click)=\"loadCartUser()\"\n    >\n      Pagar\n    </button>\n  </li>\n</ul>\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { FormsModule, FormControl } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\nimport { FilterService } from 'src/app/services/filter.service';\n\n@Component({\n  selector: 'app-filter',\n  templateUrl: './filter.component.html',\n  styleUrls: ['./filter.component.css'],\n})\nexport class FilterComponent implements OnInit {\n  constructor(public filterService: FilterService) {}\n  valorFilter = '';\n  ngOnInit(): void {\n    this.traerDatoFilter();\n    this.filter.valueChanges.pipe(debounceTime(300)).subscribe((value) => {\n      this.valorFilter = value;\n      this.filterEmitter.emit(value);\n    });\n  }\n  traerDatoFilter() {\n    const datoFilter = this.filterService.entregarDato();\n    if (datoFilter != '' || !datoFilter) {\n      this.valorFilter = datoFilter;\n      this.filter.setValue(datoFilter);\n    }\n  }\n  filter = new FormControl('');\n\n  @Output('filter') filterEmitter = new EventEmitter<String>();\n}\n","<div class=\"card filters\">\n  <div class=\"card-header\">\n    Filtros\n  </div>\n  <div class=\"card-body\">\n    <form>\n      <div class=\"form-group\">\n        <label for=\"name\">Nombre</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          name=\"filterPost\"\n          [formControl]=\"filter\"\n          class=\"form-control\"\n        />\n      </div>\n      <button class=\"btn btn-primary btn-block\">Filtrar</button>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { FilterService } from 'src/app/services/filter.service';\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n})\nexport class HomeComponent implements OnInit {\n  constructor(\n    public authService: AuthService,\n    public filterService: FilterService\n  ) {}\n  filtroValor = '';\n  ngOnInit() {\n    this.cargarDatoEnFiltro();\n  }\n  handleSearch(value: string) {\n    const datos = this.filterService.entregarDato();\n    if (datos != '' || !datos) {\n      this.filtroValor = datos;\n    }\n    this.filtroValor = value;\n  }\n\n  recibirDatoFiltro() {\n    const datos = this.filterService.entregarDato();\n    return datos;\n  }\n\n  cargarDatoEnFiltro() {\n    const datoFiltrar = this.recibirDatoFiltro();\n    if (datoFiltrar != '' || !datoFiltrar) {\n      this.filtroValor = datoFiltrar;\n    }\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-2\">\n    <app-filter (filter)=\"handleSearch($event)\"></app-filter>\n  </div>\n  <div class=\"col-md-8\">\n    <app-product-list [filtroValor]=\"filtroValor\"></app-product-list>\n  </div>\n  <div class=\"col-md-2\" *ngIf=\"authService.loggedIn()\">\n    <app-cart></app-cart>\n  </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ProductListComponent } from '../product-list.component';\nimport { Router } from '@angular/router';\nimport { Product } from 'src/app/models/products';\nimport { MessengerService } from '../../../../services/messenger.service';\nimport { ShopcartService } from '../../../../services/shopcart.service';\nimport { WishlistService } from 'src/app/services/wishlist.service';\nimport Swal from 'sweetalert2';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-product-item',\n  templateUrl: './product-item.component.html',\n  styleUrls: ['./product-item.component.css'],\n})\nexport class ProductItemComponent implements OnInit {\n  @Input() product: Product;\n  //Corazon del html\n  @Input() addedToWishList: boolean;\n  constructor(\n    private router: Router,\n    private message: MessengerService,\n    private cartService: ShopcartService,\n    private wishList: WishlistService,\n    public authService: AuthService\n  ) {}\n\n  ngOnInit(): void {}\n  selectedCard(id: String) {\n    this.router.navigate(['/preview-products', id]);\n  }\n\n  handleAddToCart() {\n    const canAddtoCart = this.authService.loggedIn();\n    if (canAddtoCart) {\n      this.cartService\n        .addProductToCar(this.product, this.cartService.getUserId())\n        .subscribe(\n          () => {\n            this.message.sendMessage(this.product);\n          },\n          (err) => {\n            if (err.error.code_error === 'product_exist') {\n              Swal.fire({\n                title: 'Ya tienes un producto similar en tu carrito',\n                text: 'Disculpa las molestias',\n                imageUrl: '../../../../../assets/imgs/welcome.svg',\n                imageWidth: 400,\n                imageHeight: 200,\n                imageAlt: 'Custom image',\n                confirmButtonColor: '#6c5ce7',\n              });\n            }\n          }\n        );\n    } else {\n      Swal.fire({\n        title: 'Hola, gracias por visitarnos!',\n        text: 'Antes de añadir un producto, por favor inicia sesion.',\n        imageUrl: '../../../../../assets/imgs/welcome.svg',\n        imageWidth: 400,\n        imageHeight: 200,\n        imageAlt: 'Custom image',\n        confirmButtonColor: '#6c5ce7',\n      });\n    }\n  }\n\n  handleAddToWishList() {\n    this.wishList\n      .addToWishList(this.product, this.cartService.getUserId())\n      .subscribe(() => {\n        this.addedToWishList = true;\n      });\n  }\n  removeFromWishList() {\n    this.wishList\n      .removeFromWishList(this.cartService.getUserId(), this.product)\n      .subscribe(() => {\n        this.addedToWishList = false;\n      });\n  }\n}\n","<div class=\"card mb-4 shadow-sm\">\n  <div class=\"card-photo\" (click)=\"selectedCard(product._id)\">\n    <img\n      [src]=\"'http://localhost:3000/public/' + product.imageName\"\n      class=\"img-card-top w-100\"\n    />\n  </div>\n  <div class=\"card-body\">\n    <p class=\"card-text\">\n      <strong>{{ product.name }}</strong>\n      <br />\n      {{ product.description | slice: 0:50 }}...\n      <br />\n      Precio: <strong> {{ product.price | currency: \"USD\" }} </strong>\n      <i\n        *ngIf=\"addedToWishList\"\n        class=\"fas fa-heart float-right\"\n        (click)=\"removeFromWishList()\"\n      ></i>\n      <i\n        *ngIf=\"!addedToWishList && authService.loggedIn()\"\n        class=\"far fa-heart float-right\"\n        (click)=\"handleAddToWishList()\"\n      ></i>\n    </p>\n    <div class=\"d-flex justify-content-between align-items-center\">\n      <div class=\"btn-group\">\n        <button\n          type=\"button\"\n          class=\"btn btn-sm btn-outline-secondary btn-card-add\"\n          (click)=\"handleAddToCart()\"\n        >\n          Añadir al carrito\n        </button>\n        <button\n          type=\"button\"\n          class=\"btn btn-sm btn-outline-secondary btn-card-product\"\n          (click)=\"selectedCard(product._id)\"\n        >\n          Ver detalles\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ProductsService } from '../../../services/products.service';\nimport { WishlistService } from 'src/app/services/wishlist.service';\nimport { ShopcartService } from 'src/app/services/shopcart.service';\nimport Swal from 'sweetalert2';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { FilterComponent } from '../filter/filter.component';\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css'],\n})\nexport class ProductListComponent implements OnInit {\n  products: any = [];\n  wishList: any[] = [];\n  @Input() filtroValor: string;\n  constructor(\n    private productService: ProductsService,\n    private wishListService: WishlistService,\n    public shopCart: ShopcartService\n  ) {}\n\n  ngOnInit(): void {\n    this.loadProducts();\n    this.loadWishList();\n  }\n  loadProducts() {\n    this.productService.getProducts().subscribe(\n      (res) => {\n        this.products = res;\n      },\n      (err) => {\n        Swal.fire({\n          title: 'Hola, lo sentimos!',\n          text:\n            'Parece que tuvimos un problema con los productos, comunicate con el administrador.',\n          imageUrl: '../../../../../assets/imgs/stress.svg',\n          imageWidth: 400,\n          imageHeight: 200,\n          imageAlt: 'Custom image',\n          confirmButtonColor: '#6c5ce7',\n        });\n      }\n    );\n  }\n\n  loadWishList() {\n    if (this.shopCart.getToken()) {\n      this.wishListService\n        .getWishList(this.shopCart.getUserId())\n        .subscribe((res) => {\n          this.wishList = res;\n        });\n    }\n  }\n}\n","<div class=\"row\">\n  <div *ngIf=\"products.length < 1\">\n    <h1>LOADING...</h1>\n  </div>\n  <div class=\"col-md-4\" *ngFor=\"let product of products | filter: filtroValor\">\n    <app-product-item\n      [product]=\"product\"\n      [addedToWishList]=\"wishList.indexOf(product._id) >= 0\"\n    ></app-product-item>\n    <!-- El addedToWishList compara si existe un product id en la wishList para dejar marcado el corazon al refrescar la pagina -->\n  </div>\n</div>\n","import { Component, OnInit, EventEmitter } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ProductsService } from 'src/app/services/products.service';\nimport { Product } from 'src/app/models/products';\nimport Swal from 'sweetalert2';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { ShopcartService } from 'src/app/services/shopcart.service';\nimport { MessengerService } from 'src/app/services/messenger.service';\ninterface HtmlInputEvent extends Event {\n  target: HTMLInputElement & EventTarget;\n}\n@Component({\n  selector: 'app-preview-products',\n  templateUrl: './preview-products.component.html',\n  styleUrls: ['./preview-products.component.css'],\n  providers: [ProductsService],\n})\nexport class PreviewProductsComponent implements OnInit {\n  id: String;\n  product: Product;\n  updateProductForm: FormGroup;\n  photoSelected: string | ArrayBuffer;\n  pricePattern = /[0-9]/;\n  file: File;\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    public productService: ProductsService,\n    public fb: FormBuilder,\n    public cartService: ShopcartService,\n    private message: MessengerService,\n    private authService: AuthService\n  ) {\n    this.updateProductForm = this.fb.group({\n      name: ['', [Validators.required]],\n      description: ['', [Validators.required]],\n      price: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(2),\n          Validators.maxLength(7),\n          Validators.pattern(this.pricePattern),\n        ],\n      ],\n      inputImage: ['', []],\n    });\n  }\n\n  ngOnInit() {\n    this.activatedRoute.params.subscribe((params) => {\n      this.id = params['id'];\n      this.productService.getProduct(this.id).subscribe(\n        (res) => {\n          this.product = res;\n          this.updateProductForm.controls['description'].setValue(\n            res.description\n          );\n          this.updateProductForm.controls['name'].setValue(res.name);\n          this.updateProductForm.controls['price'].setValue(res.price);\n        },\n        (err) => {\n          console.log(err);\n        }\n      );\n    });\n  }\n\n  addToCar() {\n    const canAddtoCart = this.authService.loggedIn();\n    if (canAddtoCart) {\n      this.cartService\n        .addProductToCar(this.product, this.cartService.getUserId())\n        .subscribe(\n          () => {\n            this.message.sendMessage(this.product);\n            Swal.fire({\n              title: 'El producto ha sido añadido a tu carrito',\n              text: 'Gracias por preferirnos',\n              imageUrl: '../../../../../assets/imgs/sucessfullProduct.svg',\n              imageWidth: 400,\n              imageHeight: 200,\n              imageAlt: 'Custom image',\n              confirmButtonColor: '#6c5ce7',\n            }).then((result) => {\n              if (result.value) {\n                this.router.navigate(['/home']);\n              }\n            });\n          },\n          (err) => {\n            if (err.error.code_error === 'product_exist') {\n              Swal.fire({\n                title: 'Ya tienes un producto similar en tu carrito',\n                text: 'Disculpa las molestias',\n                imageUrl: '../../../../../assets/imgs/welcome.svg',\n                imageWidth: 400,\n                imageHeight: 200,\n                imageAlt: 'Custom image',\n                confirmButtonColor: '#6c5ce7',\n              });\n            }\n          }\n        );\n    } else {\n      Swal.fire({\n        title: 'Hola, gracias por visitarnos!',\n        text: 'Antes de añadir un producto, por favor inicia sesion.',\n        imageUrl: '../../../../../assets/imgs/welcome.svg',\n        imageWidth: 400,\n        imageHeight: 200,\n        imageAlt: 'Custom image',\n        confirmButtonColor: '#6c5ce7',\n      });\n    }\n  }\n  //Eliminamos producto\n  deleteProduct(id: String) {\n    Swal.fire({\n      title: '¿Estas seguro de querer eliminar este registro?',\n      text: 'No podras revertir esto!',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#6c5ce7',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Si, Borralo',\n    }).then((res) => {\n      if (res.value) {\n        this.productService.deleteProduct(id).subscribe(\n          (res) => {\n            Swal.fire({\n              title: 'Eliminado',\n              text: 'Tu registro se ha eliminado con exito.',\n              icon: 'success',\n              confirmButtonColor: '#6c5ce7',\n            });\n            this.router.navigate(['/home']);\n          },\n          (err) => {\n            Swal.fire({\n              icon: 'error',\n              title: 'Algo salio mal',\n              text: 'No pudimos eliminar tu registro',\n              confirmButtonColor: '#6c5ce7',\n            });\n          }\n        );\n      } else {\n        Swal.fire({\n          icon: 'error',\n          title: 'Algo salio mal',\n          text: 'No pudimos eliminar tu registro',\n          confirmButtonColor: '#6c5ce7',\n        });\n      }\n    });\n  }\n  resetForm(form?: FormGroup) {\n    if (form) {\n      form.reset();\n    }\n  }\n  //VALIDA SI LO QUE ESTOY INGRESANDO SON NUMEROS O LETRAS\n  onPriceIntroduced(event: KeyboardEvent) {\n    const inputChar = String.fromCharCode(event.charCode);\n    if (!this.pricePattern.test(inputChar)) {\n      // invalid character, prevent input\n      event.preventDefault();\n    }\n  }\n  onPhotoSelected(event: HtmlInputEvent): void {\n    if (event.target.files && event.target.files[0]) {\n      this.file = <File>event.target.files[0];\n      //Image Preview\n      const reader = new FileReader();\n      reader.onload = (e) => (this.photoSelected = reader.result);\n      reader.readAsDataURL(this.file);\n    }\n  }\n\n  updateProduct(id: String) {\n    this.productService\n      .updateProduct(id, this.updateProductForm.value, this.file)\n      .subscribe(\n        (res) => {\n          this.resetForm(this.updateProductForm);\n          Swal.fire({\n            title: 'Actualizacion exitosa!',\n            text: 'Juego actualizado correctamente',\n            icon: 'success',\n            confirmButtonColor: '#6c5ce7',\n          });\n          this.router.navigate(['/home']);\n        },\n        (err) => {\n          console.log(err);\n          Swal.fire({\n            icon: 'error',\n            title: 'Algo salio mal',\n            text: 'No pudimos agregar el juego',\n            confirmButtonColor: '#6c5ce7',\n          });\n        }\n      );\n  }\n}\n","<div class=\"row\" *ngIf=\"!product; else mainContent\">\n  <h1>Loading...</h1>\n</div>\n\n<ng-template #mainContent>\n  <div class=\"row\">\n    <div class=\"container\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          {{ product.name }}\n        </div>\n        <form\n          class=\"card-body container row\"\n          [formGroup]=\"updateProductForm\"\n          (ngSubmit)=\"updateProduct(product._id)\"\n        >\n          <div class=\"col-md-5 card-photo\">\n            <ng-container\n              *ngIf=\"productService.canManageProduct(); else notManaged\"\n            >\n              <input\n                type=\"file\"\n                class=\"form-control-file d-none position-static\"\n                id=\"uploadImage\"\n                name=\"image\"\n                formControlName=\"inputImage\"\n                (change)=\"onPhotoSelected($event)\"\n                enctype=\"multipart/form-data\"\n                #photoInput\n              />\n              <img\n                [src]=\"\n                  photoSelected ||\n                  'http://localhost:3000/public/' + product.imageName\n                \"\n                class=\"img-fluid img-card-top\"\n                (click)=\"photoInput.click()\"\n              />\n              <strong\n                ><p\n                  class=\"upload-label\"\n                  (click)=\"photoInput.click()\"\n                  *ngIf=\"productService.canManageProduct()\"\n                >\n                  Actualizar foto\n                </p></strong\n              >\n            </ng-container>\n            <ng-template #notManaged>\n              <img\n                [src]=\"\n                  photoSelected ||\n                  'http://localhost:3000/public/' + product.imageName\n                \"\n                class=\"img-fluid img-card-top\"\n              />\n            </ng-template>\n          </div>\n          <div class=\"col-md-7\">\n            <ng-container\n              *ngIf=\"productService.canManageProduct(); else userCorriente\"\n            >\n              <div class=\"form-group\">\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  placeholder=\"Nombre del juego\"\n                  [value]=\"product.name\"\n                  formControlName=\"name\"\n                  [ngClass]=\"{\n                    'is-invalid':\n                      updateProductForm.get('name').errors &&\n                      updateProductForm.get('name').dirty\n                  }\"\n                  required\n                />\n              </div>\n              <div\n                *ngIf=\"\n                  updateProductForm.get('name').errors &&\n                  updateProductForm.get('name').dirty\n                \"\n              >\n                <p\n                  *ngIf=\"updateProductForm.get('name').hasError('required')\"\n                  class=\"invalid-p\"\n                >\n                  Campo requerido\n                </p>\n              </div>\n              <div class=\"form-group\">\n                <textarea\n                  rows=\"4\"\n                  class=\"form-control\"\n                  placeholder=\"Ingrese la descripcion del juego\"\n                  formControlName=\"description\"\n                  [ngClass]=\"{\n                    'is-invalid':\n                      updateProductForm.get('description').errors &&\n                      updateProductForm.get('description').dirty\n                  }\"\n                >\n                </textarea>\n              </div>\n              <div\n                *ngIf=\"\n                  updateProductForm.get('description').errors &&\n                  updateProductForm.get('description').dirty\n                \"\n              >\n                <p\n                  *ngIf=\"\n                    updateProductForm.get('description').hasError('required')\n                  \"\n                  class=\"invalid-p\"\n                >\n                  Campo requerido\n                </p>\n              </div>\n              <div class=\"form-group\">\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  placeholder=\"Precio del juego: 4000, 50000\"\n                  [value]=\"product.price\"\n                  minlength=\"2\"\n                  maxlength=\"7\"\n                  formControlName=\"price\"\n                  [pattern]=\"pricePattern\"\n                  (keypress)=\"onPriceIntroduced($event)\"\n                  [ngClass]=\"{\n                    'is-invalid':\n                      updateProductForm.get('price').errors &&\n                      updateProductForm.get('price').dirty\n                  }\"\n                />\n              </div>\n              <div\n                *ngIf=\"\n                  updateProductForm.get('price').errors &&\n                  updateProductForm.get('price').dirty\n                \"\n              >\n                <p\n                  *ngIf=\"updateProductForm.get('price').hasError('pattern')\"\n                  class=\"invalid-p\"\n                >\n                  Ingrese un precio correcto: 4000, 44, 44.44\n                </p>\n                <p\n                  *ngIf=\"updateProductForm.get('price').hasError('required')\"\n                  class=\"invalid-p\"\n                >\n                  Campo requerido\n                </p>\n                <p\n                  *ngIf=\"updateProductForm.get('price').hasError('minlength')\"\n                  class=\"invalid-p\"\n                >\n                  El minimo de caracteres es de 2\n                </p>\n                <p\n                  *ngIf=\"updateProductForm.get('price').errors?.maxlength\"\n                  class=\"invalid-p\"\n                >\n                  El maximo de caracteres es de 7\n                </p>\n              </div>\n              <button\n                type=\"submit\"\n                class=\"btn btn-primary col-md-3\"\n                [disabled]=\"updateProductForm.invalid\"\n              >\n                Actualizar\n              </button>\n              <a\n                class=\"btn btn-danger col-md-3\"\n                (click)=\"deleteProduct(product._id)\"\n              >\n                Eliminar\n              </a>\n            </ng-container>\n            <p></p>\n            <a\n              class=\"btn btn-primary col-md-5 btn-carrito\"\n              (click)=\"addToCar()\"\n            >\n              Añadir al carrito\n            </a>\n          </div>\n        </form>\n        <ng-template #userCorriente>\n          <p class=\"tittle-game\">{{ product.name }}</p>\n          <p class=\"description-game\">{{ product.description }}</p>\n          <p class=\"price-game\">{{ product.price | currency: \"USD\" }}</p>\n        </ng-template>\n      </div>\n    </div>\n  </div>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-private-games',\n  templateUrl: './private-games.component.html',\n  styleUrls: ['./private-games.component.css']\n})\nexport class PrivateGamesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  private-games works!\n</p>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { UsersService } from 'src/app/services/users.service';\nimport Swal from 'sweetalert2';\nimport { Router } from '@angular/router';\n\ninterface HtmlInputEvent extends Event {\n  target: HTMLInputElement & EventTarget;\n}\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css'],\n})\nexport class ProfileComponent implements OnInit {\n  user: any;\n  profileForm: FormGroup;\n  emailPattern =\n    \"^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$\";\n  constructor(\n    public authService: AuthService,\n    private fb: FormBuilder,\n    public userService: UsersService,\n    private router: Router\n  ) {\n    this.profileForm = this.fb.group({\n      name: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.pattern(this.emailPattern)]],\n      passwordActual: [''],\n      passwordNueva: [''],\n    });\n  }\n\n  ngOnInit() {\n    this.traerDatos();\n  }\n\n  traerDatos() {\n    const idUser = this.authService.decodeToken().id;\n    this.userService.getProfile(idUser).subscribe((res) => {\n      this.user = res;\n      this.profileForm.controls['email'].setValue(res.email);\n      this.profileForm.controls['name'].setValue(res.name);\n    });\n  }\n  guardarCambios(id) {\n    this.userService.updateProfile(id, this.profileForm.value).subscribe(\n      (res) => {\n        Swal.fire({\n          title: 'Perfil actualizado',\n          imageUrl: '../../../assets/imgs/people.svg',\n          imageWidth: 400,\n          imageHeight: 200,\n          imageAlt: 'Custom image',\n          confirmButtonColor: '#6c5ce7',\n        }).then((result) => {\n          if (result.value) {\n            this.router\n              .navigateByUrl('/RefreshComponent', {\n                skipLocationChange: true,\n              })\n              .then(() => {\n                this.router.navigate([`/profile/${id}`]);\n              });\n          }\n        });\n      },\n      (err) => {\n        Swal.fire({\n          title: 'Parece que hubo un error actualizando tu perfil',\n          text: 'Comunicate con el administrador del sistema',\n          imageUrl: '../../../assets/imgs/stress.svg',\n          imageWidth: 400,\n          imageHeight: 200,\n          imageAlt: 'Custom image',\n          confirmButtonColor: '#6c5ce7',\n        }).then((result) => {\n          if (result.value) {\n            this.router\n              .navigateByUrl('/RefreshComponent', {\n                skipLocationChange: true,\n              })\n              .then(() => {\n                this.router.navigate([`/profile/${id}`]);\n              });\n          }\n        });\n      }\n    );\n  }\n}\n","<div class=\"row\">\n  <div class=\"container col-md-7\">\n    <div class=\"card-header\"><h3>Mis datos personales</h3></div>\n    <form\n      class=\"card-body container row\"\n      [formGroup]=\"profileForm\"\n      (ngSubmit)=\"guardarCambios(user._id)\"\n    >\n      <div>\n        <div class=\"form-row\">\n          <div class=\"form-group col-md-6\">\n            <label for=\"email\">Email</label>\n            <input\n              type=\"email\"\n              class=\"form-control\"\n              formControlName=\"email\"\n              [ngClass]=\"{\n                'is-invalid':\n                  profileForm.get('email').errors &&\n                  profileForm.get('email').dirty\n              }\"\n              placeholder=\"email@email.com\"\n              [pattern]=\"emailPattern\"\n              required\n            />\n            <div\n              *ngIf=\"\n                profileForm.get('email').errors &&\n                profileForm.get('email').dirty\n              \"\n            >\n              <p\n                *ngIf=\"profileForm.get('email').hasError('required')\"\n                class=\"invalid-p\"\n              >\n                Campo requerido\n              </p>\n              <p\n                *ngIf=\"profileForm.get('email').hasError('pattern')\"\n                class=\"invalid-p\"\n              >\n                Ingrese un email valido\n              </p>\n            </div>\n          </div>\n\n          <div class=\"form-group col-md-6\">\n            <label for=\"passwordActual\">Contraseña actual</label>\n            <input\n              type=\"password\"\n              class=\"form-control\"\n              formControlName=\"passwordActual\"\n              placeholder=\"Ingresa tu contraseña\"\n              [ngClass]=\"{\n                'is-invalid':\n                  profileForm.get('passwordActual').errors &&\n                  profileForm.get('passwordActual').dirty\n              }\"\n            />\n          </div>\n          <div class=\"form-group col-md-6\">\n            <label for=\"passwordNueva\">Nueva contraseña</label>\n            <input\n              type=\"password\"\n              class=\"form-control\"\n              formControlName=\"passwordNueva\"\n              placeholder=\"Ingresa tu nueva contraseña\"\n              [ngClass]=\"{\n                'is-invalid':\n                  profileForm.get('passwordNueva').errors &&\n                  profileForm.get('passwordNueva').dirty\n              }\"\n            />\n          </div>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"name\">Nombre</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            placeholder=\"Ingresa tu nombre\"\n            formControlName=\"name\"\n            [ngClass]=\"{\n              'is-invalid':\n                profileForm.get('name').errors && profileForm.get('name').dirty\n            }\"\n            required\n          />\n        </div>\n        <div\n          *ngIf=\"\n            profileForm.get('name').errors && profileForm.get('name').dirty\n          \"\n        >\n          <p\n            *ngIf=\"profileForm.get('name').hasError('required')\"\n            class=\"invalid-p\"\n          >\n            Campo requerido\n          </p>\n        </div>\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-guardar\"\n          [disabled]=\"profileForm.invalid\"\n        >\n          Guardar cambios\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page404',\n  templateUrl: './page404.component.html',\n  styleUrls: ['./page404.component.css']\n})\nexport class Page404Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col-md-4 offset-md-4\">\n    <div class=\"card\">\n      <div class=\"card-header\">\n        <h3>404 - Pagina no encontrada</h3>\n        <img src=\"../../../../assets/imgs/404.svg\" width=\"50px\" height=\"50px\" />\n      </div>\n      <div class=\"card-body\">\n        <p>\n          Oops... Algo ha salido mal, la pagina que buscabas no esta disponible\n        </p>\n        <p>\n          <a routerLink=\"/\">Regresar al inicio</a>\n        </p>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport { AppComponent } from 'src/app/app.component';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css'],\n})\nexport class SigninComponent implements OnInit {\n  user = { email: '', password: '' };\n  loginForm: FormGroup;\n  emailPattern =\n    '^[a-z0-9!#$%&\\'*+/=?^_`{|}~-]+(?:.[a-z0-9!#$%&\\'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$';\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private fb: FormBuilder\n  ) {\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.pattern(this.emailPattern)]],\n      password: ['', [Validators.required, Validators.maxLength(140)]],\n    });\n  }\n\n  ngOnInit() {}\n\n  signIn() {\n    this.authService.signIn(this.loginForm.value).subscribe(\n      (res) => {\n        this.authService.setToken(res.token);\n        this.authService.decodeToken(); // USO EL DECODE TOKEN\n        AppComponent.updateUserStatus.next(true);\n        this.router.navigate(['/home']);\n        Swal.fire({\n          icon: 'success',\n          title: 'Bienvenido ' + res.datos.nombre_usuario,\n          text: 'Tu Rol es: ' + res.datos.rol,\n          confirmButtonColor: '#6c5ce7',\n        });\n      },\n      (err) => {\n        switch (err.error.code_error) {\n          case 'account_noexists':\n            Swal.fire({\n              icon: 'error',\n              title: 'Error',\n              text: 'Cuenta inexistente',\n              confirmButtonColor: '#6c5ce7',\n            });\n            break;\n          case 'password_wrong':\n            Swal.fire({\n              icon: 'error',\n              title: 'Error',\n              text: 'Contraseña incorrecta, intentelo de nuevo',\n              confirmButtonColor: '#6c5ce7',\n            })\n            break;\n          default:\n            Swal.fire({\n              icon: 'error',\n              title: 'Error',\n              text: 'Hubo un error en el inicio de sesion, intentelo de nuevo',\n              confirmButtonColor: '#6c5ce7',\n            });\n            break;\n        }\n      }\n    );\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-4 mx-auto\">\n    <div class=\"card\">\n      <div class=\"card-header\">\n        Iniciar Sesion\n      </div>\n      <div class=\"card-body\">\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"signIn()\">\n          <div class=\"form-group\">\n            <input\n              type=\"email\"\n              class=\"form-control\"\n              formControlName=\"email\"\n              placeholder=\"Ingresa tu email\"\n              [ngClass]=\"{\n                'is-invalid':\n                  loginForm.get('email').errors && loginForm.get('email').dirty\n              }\"\n              required\n              autofocus\n              [pattern]=\"emailPattern\"\n            />\n          </div>\n          <div\n            *ngIf=\"\n              loginForm.get('email').errors && loginForm.get('email').dirty\n            \"\n          >\n            <p *ngIf=\"loginForm.get('email').hasError('required')\">\n              Campo requerido\n            </p>\n            <p *ngIf=\"loginForm.get('email').hasError('pattern')\">\n              Ingrese un email valido\n            </p>\n          </div>\n          <div class=\"form-group\">\n            <input\n              type=\"password\"\n              class=\"form-control\"\n              formControlName=\"password\"\n              [ngClass]=\"{\n                'is-invalid':\n                  loginForm.get('password').errors &&\n                  loginForm.get('password').dirty\n              }\"\n              placeholder=\"Ingresa tu contraseña\"\n              required\n            />\n          </div>\n          <button\n            type=\"submit\"\n            class=\"btn btn-primary btn-block\"\n            [disabled]=\"loginForm.invalid\"\n          >\n            Iniciar Sesion\n          </button>\n          <small id=\"registerText\" class=\"form-text text-muted\"\n            >¿Nuevo en GeekyShop?\n            <a routerLink=\"/signup\">Registrate</a>\n          </small>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\nimport Swal from 'sweetalert2';\nimport { AppComponent } from 'src/app/app.component';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css'],\n})\nexport class SignupComponent implements OnInit {\n  user = { name: '', email: '', password: '' };\n  registerForm: FormGroup;\n  emailPattern =\n    \"^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$\";\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private fb: FormBuilder\n  ) {\n    this.registerForm = this.fb.group({\n      name: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.pattern(this.emailPattern)]],\n      password: ['', [Validators.required, Validators.minLength(4)]],\n    });\n  }\n\n  ngOnInit() {}\n\n  signUp() {\n    this.authService.signUp(this.registerForm.value).subscribe(\n      (res) => {\n        this.authService.setToken(res.token);\n        this.authService.decodeToken();\n        AppComponent.updateUserStatus.next(true);\n        this.router.navigate(['/home']);\n        Swal.fire({\n          icon: 'success',\n          title: 'Registro Exitoso ' + res.datos.nombre_usuario,\n          text: 'Tu Rol es: ' + res.datos.rol,\n          confirmButtonColor: '#6c5ce7',\n        });\n      },\n      (err) => {\n        switch (err.error.code_error) {\n          case 'password_invalid':\n            Swal.fire({\n              icon: 'error',\n              title: 'Error',\n              text:\n                'Contraseña invalida, por favor, ingrese mas de 4 caracteres',\n            });\n            break;\n          case 'email_existent':\n            Swal.fire({\n              icon: 'error',\n              title: 'Error',\n              text: 'Ese correo ya esta registrado, ingresa uno nuevo',\n              confirmButtonColor: '#6c5ce7',\n            });\n            break;\n          case 'email_invalid':\n            Swal.fire({\n              icon: 'error',\n              title: 'Error',\n              text: 'Este email es invalido, por favor ingrese otro',\n            });\n            break;\n          default:\n            Swal.fire({\n              icon: 'error',\n              title: 'Error',\n              text:\n                'Hubo un error en el registro, ingresa de nuevo tus credenciales',\n            });\n            break;\n        }\n      }\n    );\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-4 mx-auto\">\n    <div class=\"card\">\n      <div class=\"card-header\">\n        Registrate\n      </div>\n      <div class=\"card-body\">\n        <form [formGroup]=\"registerForm\" (ngSubmit)=\"signUp()\">\n          <div class=\"form-group\">\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              placeholder=\"Ingresa tu nombre\"\n              formControlName=\"name\"\n              [ngClass]=\"{\n                'is-invalid':\n                  registerForm.get('name').errors &&\n                  registerForm.get('name').dirty\n              }\"\n              required\n              autofocus\n            />\n          </div>\n          <div\n            *ngIf=\"\n              registerForm.get('name').errors && registerForm.get('name').dirty\n            \"\n          >\n            <p\n              *ngIf=\"registerForm.get('name').hasError('required')\"\n              class=\"invalid-p\"\n            >\n              Campo requerido\n            </p>\n          </div>\n          <div class=\"form-group\">\n            <input\n              type=\"email\"\n              class=\"form-control\"\n              placeholder=\"Ingresa tu email\"\n              formControlName=\"email\"\n              [ngClass]=\"{\n                'is-invalid':\n                  registerForm.get('email').errors &&\n                  registerForm.get('email').dirty\n              }\"\n              [pattern]=\"emailPattern\"\n              required\n            />\n          </div>\n          <div\n            *ngIf=\"\n              registerForm.get('email').errors &&\n              registerForm.get('email').dirty\n            \"\n          >\n            <p\n              *ngIf=\"registerForm.get('email').hasError('required')\"\n              class=\"invalid-p\"\n            >\n              Campo requerido\n            </p>\n            <p\n              *ngIf=\"registerForm.get('email').hasError('pattern')\"\n              class=\"invalid-p\"\n            >\n              Ingrese un email valido\n            </p>\n          </div>\n          <div class=\"form-group\">\n            <input\n              type=\"password\"\n              class=\"form-control\"\n              formControlName=\"password\"\n              placeholder=\"Ingresa tu contraseña\"\n              [ngClass]=\"{\n                'is-invalid':\n                  registerForm.get('password').errors &&\n                  registerForm.get('password').dirty\n              }\"\n              required\n              minlength=\"4\"\n            />\n          </div>\n          <div\n            *ngIf=\"\n              registerForm.get('password').errors &&\n              registerForm.get('password').dirty\n            \"\n          >\n            <p\n              *ngIf=\"registerForm.get('password').hasError('required')\"\n              class=\"invalid-p\"\n            >\n              Campo requerido\n            </p>\n            <p\n              *ngIf=\"registerForm.get('password').hasError('minlength')\"\n              class=\"invalid-p\"\n            >\n              El minimo de caracteres es de 4\n            </p>\n          </div>\n          <small id=\"registerText\" class=\"form-text text-muted\"\n            >¿Ya tienes una cuenta?\n            <a routerLink=\"/signin\">Inicia sesion</a>\n          </small>\n          <button\n            type=\"submit\"\n            class=\"btn btn-primary btn-block\"\n            [disabled]=\"registerForm.invalid\"\n          >\n            Registrarse\n          </button>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { UsersService } from 'src/app/services/users.service';\nimport { Router } from '@angular/router';\nimport { User } from 'src/app/models/users';\nimport Swal from 'sweetalert2';\nimport { RolesService } from 'src/app/services/roles.service';\nimport { ShopcartService } from 'src/app/services/shopcart.service';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css'],\n})\nexport class UsersComponent implements OnInit {\n  id: String;\n  userModificador: any;\n  user = { name: '', email: '', rol: '' };\n  roles: any;\n  onEditUser: boolean;\n  createUserForm: FormGroup;\n  emailPattern =\n    \"^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$\";\n  constructor(\n    public authService: AuthService,\n    private fb: FormBuilder,\n    public userService: UsersService,\n    public rolService: RolesService,\n    public getUserId: ShopcartService\n  ) {\n    this.createUserForm = this.fb.group({\n      name: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.pattern(this.emailPattern)]],\n      rol: ['', [Validators.required]],\n    });\n  }\n\n  ngOnInit() {\n    this.getUserModificador();\n    this.getUsers();\n    this.getRoles();\n    this.createUserForm.controls['rol'].setValue('usuario');\n    this.deshabilitarInputs();\n    this.onEditUser = false;\n  }\n\n  deshabilitarInputs() {\n    this.createUserForm.controls['name'].disable();\n    this.createUserForm.controls['email'].disable();\n    this.createUserForm.controls['rol'].disable();\n  }\n\n  habilitarInputs() {\n    this.createUserForm.controls['name'].enable();\n    this.createUserForm.controls['email'].enable();\n    this.createUserForm.controls['rol'].enable();\n  }\n\n  getUserModificador() {\n    this.userService.getProfile(this.getUserId.getUserId()).subscribe((res) => {\n      this.userModificador = res;\n    });\n  }\n  getUsers() {\n    this.userService.getUsers().subscribe((res) => {\n      this.userService.users = res as User[];\n    });\n  }\n  getRoles() {\n    this.rolService.getRoles().subscribe((res) => {\n      this.roles = res;\n    });\n  }\n  resetForm(form?: FormGroup) {\n    if (form) {\n      form.reset();\n      this.createUserForm.controls['rol'].setValue('usuario');\n      this.userService.selectedUser = new User();\n    }\n  }\n\n  addUser() {\n    if (this.onEditUser == true) {\n      this.userService\n        .updateProfile(this.id, this.createUserForm.value)\n        .subscribe(\n          (res) => {\n            this.resetForm(this.createUserForm);\n            this.getUsers();\n            this.deshabilitarInputs();\n            Swal.fire({\n              title: 'Actualizacion exitosa!',\n              text: 'Empleado actualizado correctamente',\n              icon: 'success',\n              confirmButtonColor: '#6c5ce7',\n            });\n          },\n          (err) => {\n            console.log(err);\n          }\n        );\n    }\n  }\n\n  editUser(user) {\n    this.habilitarInputs();\n    this.id = user._id;\n    this.userService.selectedUser = user;\n    this.createUserForm.controls['name'].setValue(user.name);\n    this.createUserForm.controls['email'].setValue(user.email);\n    this.createUserForm.controls['rol'].setValue(user.rol);\n    this.onEditUser = true;\n  }\n\n  deleteUser(_id: string) {\n    console.log(this.userModificador);\n    Swal.fire({\n      title: '¿Estas seguro de querer eliminar este registro?',\n      text: 'No podras revertir esto!',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#6c5ce7',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Si, Borralo',\n    }).then((result) => {\n      if (result.value) {\n        this.userService.deleteUser(_id, this.userModificador).subscribe(\n          (res) => {\n            Swal.fire({\n              title: 'Eliminado',\n              text: 'Tu registro se ha eliminado con exito.',\n              icon: 'success',\n              confirmButtonColor: '#6c5ce7',\n            });\n            this.getUsers();\n          },\n          (err) => {\n            Swal.fire({\n              icon: 'error',\n              title: 'Algo salio mal',\n              text: 'No pudimos eliminar tu registro',\n              confirmButtonColor: '#6c5ce7',\n            });\n          }\n        );\n      } else {\n        Swal.fire({\n          icon: 'error',\n          title: 'Algo salio mal',\n          text: 'No pudimos eliminar tu registro',\n          confirmButtonColor: '#6c5ce7',\n        });\n      }\n    });\n  }\n}\n","<div class=\"row\">\n  <div class=\"container col-5\">\n    <div class=\"card\">\n      <div class=\"card-header\">\n        Gestion de usuarios\n      </div>\n      <div class=\"card-body\">\n        <form [formGroup]=\"createUserForm\" (ngSubmit)=\"addUser()\">\n          <div class=\"form-group\">\n            <div class=\"form-group\">\n              <label for=\"nombre\">Nombre del usuario</label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                name=\"name\"\n                formControlName=\"name\"\n                [ngClass]=\"{\n                  'is-invalid':\n                    createUserForm.get('name').errors &&\n                    createUserForm.get('name').dirty\n                }\"\n                placeholder=\"Ingresa el nuevo nombre\"\n                required\n              />\n            </div>\n            <div\n              *ngIf=\"\n                createUserForm.get('name').errors &&\n                createUserForm.get('name').dirty\n              \"\n            >\n              <p\n                *ngIf=\"createUserForm.get('name').hasError('required')\"\n                class=\"invalid-p\"\n              >\n                Campo requerido\n              </p>\n            </div>\n            <div class=\"form-group\">\n              <label for=\"email\">Email del usuario</label>\n              <input\n                type=\"email\"\n                class=\"form-control\"\n                placeholder=\"Ingresa el nuevo email\"\n                formControlName=\"email\"\n                [ngClass]=\"{\n                  'is-invalid':\n                    createUserForm.get('email').errors &&\n                    createUserForm.get('email').dirty\n                }\"\n                [pattern]=\"emailPattern\"\n              />\n            </div>\n            <div\n              *ngIf=\"\n                createUserForm.get('email').errors &&\n                createUserForm.get('email').dirty\n              \"\n            >\n              <p\n                *ngIf=\"createUserForm.get('email').hasError('required')\"\n                class=\"invalid-p\"\n              >\n                Campo requerido\n              </p>\n              <p\n                *ngIf=\"createUserForm.get('email').hasError('pattern')\"\n                class=\"invalid-p\"\n              >\n                Ingrese un email valido\n              </p>\n            </div>\n            <div class=\"form-group\" *ngIf=\"authService.isAdmin()\">\n              <label for=\"rol\">Rol del empleado</label>\n              <select formControlName=\"rol\">\n                <option [value]=\"rol\" *ngFor=\"let rol of roles\">{{\n                  rol\n                }}</option>\n              </select>\n            </div>\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary\"\n              style=\"margin-left: 2px;\"\n              [disabled]=\"createUserForm.invalid\"\n            >\n              Guardar\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-primary\"\n              (click)=\"resetForm(createUserForm)\"\n            >\n              Limpiar\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n  <div class=\"container table-employee col-6\">\n    <table class=\"table table-bordered\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Email</th>\n          <th>Rol</th>\n          <th>Operaciones</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let user of userService.users\">\n          <td>{{ user.name }}</td>\n          <td>{{ user.email }}</td>\n          <td>{{ user.rol }}</td>\n          <td class=\"icons\">\n            <a (click)=\"editUser(user)\">\n              <i class=\"material-icons\">edit</i>\n            </a>\n            <a (click)=\"deleteUser(user._id)\" *ngIf=\"authService.isAdmin()\">\n              <i class=\"material-icons\" style=\"margin-left: 40px;\">delete</i>\n            </a>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  Router,\n} from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthBackToLoginGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean {\n    if (this.authService.loggedIn()) {\n      this.router.navigate(['/home'], {\n        queryParams: {\n          returnUrl: state.url,\n        },\n      });\n      return false;\n    }\n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  Router,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthRoleAdminGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean {\n    if (this.authService.isAdmin()) {\n      return true;\n    }\n    this.router.navigate(['/home'], {\n      queryParams: {\n        returnUrl: state.url,\n      },\n    });\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  Router,\n} from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthRoleEmployeeGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean {\n    if (this.authService.isEmployee() || this.authService.isAdmin()) {\n      return true;\n    }\n    this.router.navigate(['/home'], {\n      queryParams: {\n        returnUrl: state.url,\n      },\n    });\n    return false;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n} from \"@angular/router\";\nimport { AuthService } from \"../services/auth.service\";\nimport { Router } from \"@angular/router\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean {\n    if (this.authService.loggedIn()) {\n      return true;\n    }\n    this.router.navigate([\"/signin\"], {\n      queryParams: {\n        returnUrl: state.url,\n      },\n    });\n    return false;\n  }\n}\n","export class CartItem {\n  constructor(_id: '', productId, userId) {\n    this._id = _id;\n    this.productId = productId;\n    this.userId = userId;\n  }\n  _id: string;\n  productId: string;\n  userId: string;\n}\n","export class Employee {\n  constructor(_id = '', name = '', position = '', officine = '', salary = 0) {\n    this._id = _id;\n    this.name = name;\n    this.position = position;\n    this.officine = officine;\n    this.salary = salary;\n  }\n\n  _id: string;\n  name: string;\n  position: string;\n  officine: string;\n  salary: number;\n}\n","export class Product {\r\n  constructor(\r\n    _id = '',\r\n    name = '',\r\n    description = '',\r\n    price = 0,\r\n    imagePath = '',\r\n    imageName = ''\r\n  ) {\r\n    this._id = _id;\r\n    this.name = name;\r\n    this.description = description;\r\n    this.price = price;\r\n    this.imagePath = imagePath;\r\n    this.imageName = imageName;\r\n  }\r\n\r\n  _id: string;\r\n  name: string;\r\n  description: string;\r\n  price: number;\r\n  imagePath: string;\r\n  imageName: string;\r\n}\r\n","export class User {\n  constructor(_id = '', name = '', email = '', password = '', rol = '') {\n    this._id = _id;\n    this.name = name;\n    this.email = email;\n    this.password = password;\n    this.rol = rol;\n  }\n\n  _id: string;\n  name: string;\n  email: string;\n  password: string;\n  rol: string;\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { listLazyRoutes } from '@angular/compiler/src/aot/lazy_routes';\n\n@Pipe({\n  name: 'filter',\n})\nexport class FilterPipe implements PipeTransform {\n  transform(lista: any[], texto: string): any {\n    if (!texto) {\n      return lista;\n    }\n    return lista.filter((product) =>\n      product.name.toUpperCase().includes(texto.toUpperCase())\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { map } from 'rxjs/operators';\nimport * as jwt_decode from 'jwt-decode';\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private URL = 'http://localhost:3000';\n  constructor(private http: HttpClient, private router: Router) {}\n\n  signUp(user) {\n    return this.http.post<any>('/signup', user).pipe(map((res) => res));\n  }\n\n  signIn(user): Observable<any> {\n    return this.http.post<any>('/signin', user).pipe(map((res) => res));\n  }\n\n  loggedIn() {\n    if (localStorage.getItem('token')) {\n      return true;\n    }\n  }\n\n  getToken() {\n    return localStorage.getItem('token');\n  }\n\n  isAdmin() {\n    if (this.loggedIn) {\n      const rol = this.decodeToken().rol;\n      if (rol != 'admin') {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  isEmployee() {\n    if (this.loggedIn) {\n      const rol = this.decodeToken().rol;\n      if (rol != 'empleado' && rol != 'admin') {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  logOut() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('datos');\n    this.router.navigate(['/home']);\n  }\n\n  setToken(token) {\n    localStorage.setItem('token', token);\n  }\n\n  //DECODIFICO EL TOKEN PARA SACAR LOS DATOS QUE ENVIO DESDE EL BACKEND\n  decodeToken() {\n    let token = this.getToken(); //TRAIGO EL TOKEN\n    let decode = jwt_decode(token); //LO DE CODIFICO\n    return decode; // LO RETORNO, LO USO EN SIGNIN-SIGNUP, ETC.\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Employee } from '../models/employee';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EmployeeService {\n  selectedEmployee: Employee;\n  employees: Employee[];\n  readonly URL_API = 'http://localhost:3000';\n\n  constructor(private http: HttpClient) {\n    this.selectedEmployee = new Employee();\n  }\n\n  postEmployee(Employee) {\n    return this.http\n      .post<Employee>('/employees', Employee)\n      .pipe(map((res) => res));\n  }\n\n  getEmployees() {\n    return this.http.get('/employees');\n  }\n\n  putEmployee(id: String, Employee) {\n    return this.http\n      .put<Employee>('/employees' + `/${id}`, Employee)\n      .pipe(map((res) => res));\n  }\n\n  deleteEmployee(_id: string) {\n    return this.http.delete('/employees' + `/${_id}`);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FilterService {\n  datoFilter = '';\n  constructor() {}\n\n  tomarDatos(dato) {\n    this.datoFilter = dato;\n    return dato;\n  }\n  entregarDato() {\n    return this.datoFilter;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n@Injectable({\n  providedIn: 'root',\n})\nexport class MessengerService {\n  subject = new Subject();\n\n  constructor() {}\n\n  sendMessage(product) {\n    this.subject.next(product); //Triggering an event\n  }\n\n  getMessage() {\n    return this.subject.asObservable();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Product } from '../models/products';\nimport * as jwt_decode from 'jwt-decode';\nimport { Observable } from 'rxjs';\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductsService {\n  private URL = 'http://localhost:3000';\n  selectedProduct: Product;\n  products: Product[];\n  constructor(private http: HttpClient) {\n    this.selectedProduct = new Product();\n  }\n\n  createProduct(product, photo: File) {\n    const formData = new FormData();\n    formData.append('name', product.name);\n    formData.append('description', product.description);\n    formData.append('price', product.price);\n    formData.append('image', photo);\n    return this.http\n      .post<Product>('/products', formData)\n      .pipe(map((res) => res));\n  }\n\n  getProducts(): Observable<Product> {\n    return this.http.get<Product>('/products').pipe(map((res) => res));\n  }\n\n  getProduct(id: String) {\n    return this.http\n      .get<Product>('/products' + `/${id}`)\n      .pipe(map((res) => res));\n  }\n  deleteProduct(id: String) {\n    return this.http\n      .delete<Product>('/products' + `/${id}`)\n      .pipe(map((res) => res));\n  }\n  updateProduct(id: String, product, photo: File) {\n    const formData = new FormData();\n    formData.append('name', product.name);\n    formData.append('description', product.description);\n    formData.append('price', product.price);\n    formData.append('image', photo);\n    return this.http\n      .put<Product>('/products' + `/${id}`, formData)\n      .pipe(map((res) => res));\n  }\n\n  canManageProduct() {\n    if (localStorage.getItem('token')) {\n      const rol = this.decodeToken().rol;\n      if (rol == 'empleado' || rol == 'admin') {\n        return true;\n      }\n    }\n  }\n  //DECODIFICO EL TOKEN PARA SACAR LOS DATOS QUE ENVIO DESDE EL BACKEND\n  decodeToken() {\n    let token = localStorage.getItem('token'); //TRAIGO EL TOKEN\n    let decode = jwt_decode(token); //LO DECODIFICO\n    return decode; // LO RETORNO, LO USO EN SIGNIN-SIGNUP, ETC.\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RolesService {\n  private URL = 'http://localhost:3000';\n  constructor(private http: HttpClient) {}\n\n  getRoles() {\n    return this.http.get(`/rol`).pipe(map((res) => res));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CartItem } from '../models/cart-item';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Product } from '../models/products';\nimport { map } from 'rxjs/operators';\nimport Swal from 'sweetalert2';\nimport * as jwt_decode from 'jwt-decode';\nimport { User } from '../models/users';\n@Injectable({\n  providedIn: 'root',\n})\nexport class ShopcartService {\n  private URL = 'http://localhost:3000';\n  constructor(private http: HttpClient) {}\n\n  getCartItems(idUser): Observable<CartItem[]> {\n    return this.http.get<CartItem[]>('/cart' + `/${idUser}`).pipe(\n      map((result: any) => {\n        let cartItems: CartItem[] = [];\n        for (let item of result.carts) {\n          cartItems.push(new CartItem(item._id, item.productId, item.userId));\n        }\n        return result.producto;\n      })\n    );\n  }\n\n  getCartUser(idUser) {\n    return this.http.get(`/cart/${idUser}`).pipe(\n      map((result: any) => {\n        return result.carts;\n      })\n    );\n  }\n\n  addProductToCar(product, userId) {\n    const data = {\n      productId: product._id,\n      userId: userId,\n    };\n    return this.http.post<CartItem>('/cart', data).pipe(map((res) => res));\n  }\n  deleteProductFromCar(product, userId) {\n    const data = {\n      productId: product._id,\n      userId: userId,\n    };\n    return this.http.put<CartItem>(`/cart/${userId}`, data);\n  }\n  cleanCart(userId) {\n    return this.http.delete<CartItem>(`/cart/${userId}`);\n  }\n  getUserId() {\n    const userId = this.decodeToken().id;\n    return userId;\n  }\n  decodeToken() {\n    let token = this.getToken(); //TRAIGO EL TOKEN\n    let decode = jwt_decode(token); //LO DE CODIFICO\n    return decode; // LO RETORNO, LO USO EN SIGNIN-SIGNUP, ETC.\n  }\n  getToken() {\n    return localStorage.getItem('token');\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpInterceptor } from \"@angular/common/http\";\nimport { AuthService } from \"../services/auth.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class TokenInterceptorService implements HttpInterceptor {\n  constructor(public authService: AuthService) {}\n\n  intercept(req, next) {\n    const tokenReq = req.clone({\n      setHeaders: {\n        Authorization: `Bearer ${this.authService.getToken()}`,\n      },\n    });\n    return next.handle(tokenReq);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { User } from '../models/users';\nimport { map } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UsersService {\n  selectedUser: User;\n  users: User[];\n  private URL = 'http://localhost:3000';\n  constructor(private http: HttpClient) {}\n  getProfile(userId): Observable<User> {\n    return this.http.get<User>(`/user/${userId}`).pipe(map((res) => res));\n  }\n\n  updateProfile(userId, User): Observable<User> {\n    return this.http.put<User>(`/user/${userId}`, User).pipe(map((res) => res));\n  }\n\n  getUsers() {\n    return this.http.get(`/user`);\n  }\n\n  createUser(User) {\n    return this.http.post<User>(`/user`, User).pipe(map((res) => res));\n  }\n\n  deleteUser(id, user) {\n    return this.http.post(`/user/${id}`, user).pipe(map((res) => res));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { WishList } from '../models/wishlist';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class WishlistService {\n  private URL = 'http://localhost:3000';\n  constructor(private http: HttpClient) {}\n\n  getWishList(idUser) {\n    return this.http.get('/wishlist' + `/${idUser}`).pipe(\n      map((result: any) => {\n        let productIds = [];\n        for (let item of result.products) {\n          productIds.push(item._id);\n        }\n        return productIds;\n      })\n    );\n  }\n\n  addToWishList(product, userId): Observable<any> {\n    const data = {\n      productId: product._id,\n      userId: userId,\n    };\n    return this.http.post<WishList>('/wishlist', data).pipe(map((res) => res));\n  }\n\n  removeFromWishList(userId, productId) {\n    return this.http\n      .put('/wishlist' + `/${userId}`, productId)\n      .pipe(map((res) => res));\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}